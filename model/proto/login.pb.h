// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

#ifndef PROTOBUF_Login_2eproto__INCLUDED
#define PROTOBUF_Login_2eproto__INCLUDED

#include <string>
#include "type/type_factory.h"
#include "opcode/LoginOpcode.h"
#include "module/message/MessageDefines.h"
#include "etc/etc_config.h"

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#undef GetMessage

namespace login {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Login_2eproto();
void protobuf_AssignDesc_Login_2eproto();
void protobuf_ShutdownFile_Login_2eproto();

class Login_AccountLogin_Request_20020;
class Login_AccountLogin_Response_20021;
class Login_HeartBeat_Request_30;
class Login_RegisterEmail_Request_20010;
class Login_RegisterEmail_Response_20011;
class Login_WechatLogin_Request_20022;
class Login_WechatLogin_Response_20023;
class Login_keyLogin_Request_20024;
class Login_keyLogin_Response_20025;

// ===================================================================

class Login_RegisterEmail_Request_20010 : public IRequest /* @@protoc_insertion_point(class_definition:login.Login_RegisterEmail_Request_20010) */ {
 public:
  Login_RegisterEmail_Request_20010();
  virtual ~Login_RegisterEmail_Request_20010();

  Login_RegisterEmail_Request_20010(const Login_RegisterEmail_Request_20010& from);

  inline Login_RegisterEmail_Request_20010& operator=(const Login_RegisterEmail_Request_20010& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Login_RegisterEmail_Request_20010& default_instance();

  void Swap(Login_RegisterEmail_Request_20010* other);

  // implements Message ----------------------------------------------

  inline Login_RegisterEmail_Request_20010* New() const { return New(NULL); }

  Login_RegisterEmail_Request_20010* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return LoginOpcode::Login_RegisterEmail_Request_20010;}
  virtual Type GetType()const override {return typeof(Login_RegisterEmail_Request_20010);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IRequest;}
  void CopyFrom(const Login_RegisterEmail_Request_20010& from);
  void MergeFrom(const Login_RegisterEmail_Request_20010& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Login_RegisterEmail_Request_20010* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string Email = 2;
  void clear_email();
  static const int kEmailFieldNumber = 2;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional string Password = 3;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:login.Login_RegisterEmail_Request_20010)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 rpcid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Login_2eproto();
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static Login_RegisterEmail_Request_20010* default_instance_;
};
// -------------------------------------------------------------------

class Login_RegisterEmail_Response_20011 : public IResponse /* @@protoc_insertion_point(class_definition:login.Login_RegisterEmail_Response_20011) */ {
 public:
  Login_RegisterEmail_Response_20011();
  virtual ~Login_RegisterEmail_Response_20011();

  Login_RegisterEmail_Response_20011(const Login_RegisterEmail_Response_20011& from);

  inline Login_RegisterEmail_Response_20011& operator=(const Login_RegisterEmail_Response_20011& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Login_RegisterEmail_Response_20011& default_instance();

  void Swap(Login_RegisterEmail_Response_20011* other);

  // implements Message ----------------------------------------------

  inline Login_RegisterEmail_Response_20011* New() const { return New(NULL); }

  Login_RegisterEmail_Response_20011* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetError()const override {return error();}
  virtual void SetError(const int32_t val)override { set_error(val);}
  virtual const ::std::string& GetMessage()const override {return message();}
  virtual void SetMessage(const ::std::string& val)override { set_message(val);}
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return LoginOpcode::Login_RegisterEmail_Response_20011;}
  virtual Type GetType()const override {return typeof(Login_RegisterEmail_Response_20011);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IResponse;}
  void CopyFrom(const Login_RegisterEmail_Response_20011& from);
  void MergeFrom(const Login_RegisterEmail_Response_20011& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Login_RegisterEmail_Response_20011* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 AccountId = 2;
  void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // optional string Message = 91;
  void clear_message();
  static const int kMessageFieldNumber = 91;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional int32 Error = 92;
  void clear_error();
  static const int kErrorFieldNumber = 92;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:login.Login_RegisterEmail_Response_20011)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Login_2eproto();
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static Login_RegisterEmail_Response_20011* default_instance_;
};
// -------------------------------------------------------------------

class Login_AccountLogin_Request_20020 : public IRequest /* @@protoc_insertion_point(class_definition:login.Login_AccountLogin_Request_20020) */ {
 public:
  Login_AccountLogin_Request_20020();
  virtual ~Login_AccountLogin_Request_20020();

  Login_AccountLogin_Request_20020(const Login_AccountLogin_Request_20020& from);

  inline Login_AccountLogin_Request_20020& operator=(const Login_AccountLogin_Request_20020& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Login_AccountLogin_Request_20020& default_instance();

  void Swap(Login_AccountLogin_Request_20020* other);

  // implements Message ----------------------------------------------

  inline Login_AccountLogin_Request_20020* New() const { return New(NULL); }

  Login_AccountLogin_Request_20020* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return LoginOpcode::Login_AccountLogin_Request_20020;}
  virtual Type GetType()const override {return typeof(Login_AccountLogin_Request_20020);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IRequest;}
  void CopyFrom(const Login_AccountLogin_Request_20020& from);
  void MergeFrom(const Login_AccountLogin_Request_20020& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Login_AccountLogin_Request_20020* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Account = 1;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string Password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:login.Login_AccountLogin_Request_20020)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 rpcid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Login_2eproto();
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static Login_AccountLogin_Request_20020* default_instance_;
};
// -------------------------------------------------------------------

class Login_AccountLogin_Response_20021 : public IResponse /* @@protoc_insertion_point(class_definition:login.Login_AccountLogin_Response_20021) */ {
 public:
  Login_AccountLogin_Response_20021();
  virtual ~Login_AccountLogin_Response_20021();

  Login_AccountLogin_Response_20021(const Login_AccountLogin_Response_20021& from);

  inline Login_AccountLogin_Response_20021& operator=(const Login_AccountLogin_Response_20021& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Login_AccountLogin_Response_20021& default_instance();

  void Swap(Login_AccountLogin_Response_20021* other);

  // implements Message ----------------------------------------------

  inline Login_AccountLogin_Response_20021* New() const { return New(NULL); }

  Login_AccountLogin_Response_20021* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetError()const override {return error();}
  virtual void SetError(const int32_t val)override { set_error(val);}
  virtual const ::std::string& GetMessage()const override {return message();}
  virtual void SetMessage(const ::std::string& val)override { set_message(val);}
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return LoginOpcode::Login_AccountLogin_Response_20021;}
  virtual Type GetType()const override {return typeof(Login_AccountLogin_Response_20021);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IResponse;}
  void CopyFrom(const Login_AccountLogin_Response_20021& from);
  void MergeFrom(const Login_AccountLogin_Response_20021& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Login_AccountLogin_Response_20021* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 AccountId = 2;
  void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // optional string Key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string ServerIp = 4;
  void clear_serverip();
  static const int kServerIpFieldNumber = 4;
  const ::std::string& serverip() const;
  void set_serverip(const ::std::string& value);
  void set_serverip(const char* value);
  void set_serverip(const char* value, size_t size);
  ::std::string* mutable_serverip();
  ::std::string* release_serverip();
  void set_allocated_serverip(::std::string* serverip);

  // optional int32 ServerPort = 5;
  void clear_serverport();
  static const int kServerPortFieldNumber = 5;
  ::google::protobuf::int32 serverport() const;
  void set_serverport(::google::protobuf::int32 value);

  // optional string ListServerIp = 6;
  void clear_listserverip();
  static const int kListServerIpFieldNumber = 6;
  const ::std::string& listserverip() const;
  void set_listserverip(const ::std::string& value);
  void set_listserverip(const char* value);
  void set_listserverip(const char* value, size_t size);
  ::std::string* mutable_listserverip();
  ::std::string* release_listserverip();
  void set_allocated_listserverip(::std::string* listserverip);

  // optional int32 ListServerPort = 7;
  void clear_listserverport();
  static const int kListServerPortFieldNumber = 7;
  ::google::protobuf::int32 listserverport() const;
  void set_listserverport(::google::protobuf::int32 value);

  // optional int64 BanToTime = 10;
  void clear_bantotime();
  static const int kBanToTimeFieldNumber = 10;
  ::google::protobuf::int64 bantotime() const;
  void set_bantotime(::google::protobuf::int64 value);

  // optional string BanContent = 11;
  void clear_bancontent();
  static const int kBanContentFieldNumber = 11;
  const ::std::string& bancontent() const;
  void set_bancontent(const ::std::string& value);
  void set_bancontent(const char* value);
  void set_bancontent(const char* value, size_t size);
  ::std::string* mutable_bancontent();
  ::std::string* release_bancontent();
  void set_allocated_bancontent(::std::string* bancontent);

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // optional string Message = 91;
  void clear_message();
  static const int kMessageFieldNumber = 91;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional int32 Error = 92;
  void clear_error();
  static const int kErrorFieldNumber = 92;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:login.Login_AccountLogin_Response_20021)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr serverip_;
  ::google::protobuf::internal::ArenaStringPtr listserverip_;
  ::google::protobuf::int32 serverport_;
  ::google::protobuf::int32 listserverport_;
  ::google::protobuf::int64 bantotime_;
  ::google::protobuf::internal::ArenaStringPtr bancontent_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Login_2eproto();
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static Login_AccountLogin_Response_20021* default_instance_;
};
// -------------------------------------------------------------------

class Login_WechatLogin_Request_20022 : public IRequest /* @@protoc_insertion_point(class_definition:login.Login_WechatLogin_Request_20022) */ {
 public:
  Login_WechatLogin_Request_20022();
  virtual ~Login_WechatLogin_Request_20022();

  Login_WechatLogin_Request_20022(const Login_WechatLogin_Request_20022& from);

  inline Login_WechatLogin_Request_20022& operator=(const Login_WechatLogin_Request_20022& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Login_WechatLogin_Request_20022& default_instance();

  void Swap(Login_WechatLogin_Request_20022* other);

  // implements Message ----------------------------------------------

  inline Login_WechatLogin_Request_20022* New() const { return New(NULL); }

  Login_WechatLogin_Request_20022* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return LoginOpcode::Login_WechatLogin_Request_20022;}
  virtual Type GetType()const override {return typeof(Login_WechatLogin_Request_20022);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IRequest;}
  void CopyFrom(const Login_WechatLogin_Request_20022& from);
  void MergeFrom(const Login_WechatLogin_Request_20022& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Login_WechatLogin_Request_20022* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string WxCode = 1;
  void clear_wxcode();
  static const int kWxCodeFieldNumber = 1;
  const ::std::string& wxcode() const;
  void set_wxcode(const ::std::string& value);
  void set_wxcode(const char* value);
  void set_wxcode(const char* value, size_t size);
  ::std::string* mutable_wxcode();
  ::std::string* release_wxcode();
  void set_allocated_wxcode(::std::string* wxcode);

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:login.Login_WechatLogin_Request_20022)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr wxcode_;
  ::google::protobuf::int32 rpcid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Login_2eproto();
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static Login_WechatLogin_Request_20022* default_instance_;
};
// -------------------------------------------------------------------

class Login_WechatLogin_Response_20023 : public IResponse /* @@protoc_insertion_point(class_definition:login.Login_WechatLogin_Response_20023) */ {
 public:
  Login_WechatLogin_Response_20023();
  virtual ~Login_WechatLogin_Response_20023();

  Login_WechatLogin_Response_20023(const Login_WechatLogin_Response_20023& from);

  inline Login_WechatLogin_Response_20023& operator=(const Login_WechatLogin_Response_20023& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Login_WechatLogin_Response_20023& default_instance();

  void Swap(Login_WechatLogin_Response_20023* other);

  // implements Message ----------------------------------------------

  inline Login_WechatLogin_Response_20023* New() const { return New(NULL); }

  Login_WechatLogin_Response_20023* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetError()const override {return error();}
  virtual void SetError(const int32_t val)override { set_error(val);}
  virtual const ::std::string& GetMessage()const override {return message();}
  virtual void SetMessage(const ::std::string& val)override { set_message(val);}
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return LoginOpcode::Login_WechatLogin_Response_20023;}
  virtual Type GetType()const override {return typeof(Login_WechatLogin_Response_20023);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IResponse;}
  void CopyFrom(const Login_WechatLogin_Response_20023& from);
  void MergeFrom(const Login_WechatLogin_Response_20023& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Login_WechatLogin_Response_20023* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 AccountId = 2;
  void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // optional string Key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string ServerIp = 4;
  void clear_serverip();
  static const int kServerIpFieldNumber = 4;
  const ::std::string& serverip() const;
  void set_serverip(const ::std::string& value);
  void set_serverip(const char* value);
  void set_serverip(const char* value, size_t size);
  ::std::string* mutable_serverip();
  ::std::string* release_serverip();
  void set_allocated_serverip(::std::string* serverip);

  // optional int32 ServerPort = 5;
  void clear_serverport();
  static const int kServerPortFieldNumber = 5;
  ::google::protobuf::int32 serverport() const;
  void set_serverport(::google::protobuf::int32 value);

  // optional string ListServerIp = 6;
  void clear_listserverip();
  static const int kListServerIpFieldNumber = 6;
  const ::std::string& listserverip() const;
  void set_listserverip(const ::std::string& value);
  void set_listserverip(const char* value);
  void set_listserverip(const char* value, size_t size);
  ::std::string* mutable_listserverip();
  ::std::string* release_listserverip();
  void set_allocated_listserverip(::std::string* listserverip);

  // optional int32 ListServerPort = 7;
  void clear_listserverport();
  static const int kListServerPortFieldNumber = 7;
  ::google::protobuf::int32 listserverport() const;
  void set_listserverport(::google::protobuf::int32 value);

  // optional int64 BanToTime = 10;
  void clear_bantotime();
  static const int kBanToTimeFieldNumber = 10;
  ::google::protobuf::int64 bantotime() const;
  void set_bantotime(::google::protobuf::int64 value);

  // optional string BanContent = 11;
  void clear_bancontent();
  static const int kBanContentFieldNumber = 11;
  const ::std::string& bancontent() const;
  void set_bancontent(const ::std::string& value);
  void set_bancontent(const char* value);
  void set_bancontent(const char* value, size_t size);
  ::std::string* mutable_bancontent();
  ::std::string* release_bancontent();
  void set_allocated_bancontent(::std::string* bancontent);

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // optional string Message = 91;
  void clear_message();
  static const int kMessageFieldNumber = 91;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional int32 Error = 92;
  void clear_error();
  static const int kErrorFieldNumber = 92;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:login.Login_WechatLogin_Response_20023)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr serverip_;
  ::google::protobuf::internal::ArenaStringPtr listserverip_;
  ::google::protobuf::int32 serverport_;
  ::google::protobuf::int32 listserverport_;
  ::google::protobuf::int64 bantotime_;
  ::google::protobuf::internal::ArenaStringPtr bancontent_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Login_2eproto();
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static Login_WechatLogin_Response_20023* default_instance_;
};
// -------------------------------------------------------------------

class Login_keyLogin_Request_20024 : public IRequest /* @@protoc_insertion_point(class_definition:login.Login_keyLogin_Request_20024) */ {
 public:
  Login_keyLogin_Request_20024();
  virtual ~Login_keyLogin_Request_20024();

  Login_keyLogin_Request_20024(const Login_keyLogin_Request_20024& from);

  inline Login_keyLogin_Request_20024& operator=(const Login_keyLogin_Request_20024& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Login_keyLogin_Request_20024& default_instance();

  void Swap(Login_keyLogin_Request_20024* other);

  // implements Message ----------------------------------------------

  inline Login_keyLogin_Request_20024* New() const { return New(NULL); }

  Login_keyLogin_Request_20024* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return LoginOpcode::Login_keyLogin_Request_20024;}
  virtual Type GetType()const override {return typeof(Login_keyLogin_Request_20024);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IRequest;}
  void CopyFrom(const Login_keyLogin_Request_20024& from);
  void MergeFrom(const Login_keyLogin_Request_20024& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Login_keyLogin_Request_20024* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 AccountId = 1;
  void clear_accountid();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // optional string Key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:login.Login_keyLogin_Request_20024)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 accountid_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 rpcid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Login_2eproto();
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static Login_keyLogin_Request_20024* default_instance_;
};
// -------------------------------------------------------------------

class Login_keyLogin_Response_20025 : public IResponse /* @@protoc_insertion_point(class_definition:login.Login_keyLogin_Response_20025) */ {
 public:
  Login_keyLogin_Response_20025();
  virtual ~Login_keyLogin_Response_20025();

  Login_keyLogin_Response_20025(const Login_keyLogin_Response_20025& from);

  inline Login_keyLogin_Response_20025& operator=(const Login_keyLogin_Response_20025& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Login_keyLogin_Response_20025& default_instance();

  void Swap(Login_keyLogin_Response_20025* other);

  // implements Message ----------------------------------------------

  inline Login_keyLogin_Response_20025* New() const { return New(NULL); }

  Login_keyLogin_Response_20025* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetError()const override {return error();}
  virtual void SetError(const int32_t val)override { set_error(val);}
  virtual const ::std::string& GetMessage()const override {return message();}
  virtual void SetMessage(const ::std::string& val)override { set_message(val);}
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return LoginOpcode::Login_keyLogin_Response_20025;}
  virtual Type GetType()const override {return typeof(Login_keyLogin_Response_20025);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IResponse;}
  void CopyFrom(const Login_keyLogin_Response_20025& from);
  void MergeFrom(const Login_keyLogin_Response_20025& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Login_keyLogin_Response_20025* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 SessionID = 2;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 2;
  ::google::protobuf::int32 sessionid() const;
  void set_sessionid(::google::protobuf::int32 value);

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // optional string Message = 91;
  void clear_message();
  static const int kMessageFieldNumber = 91;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional int32 Error = 92;
  void clear_error();
  static const int kErrorFieldNumber = 92;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:login.Login_keyLogin_Response_20025)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 sessionid_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Login_2eproto();
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static Login_keyLogin_Response_20025* default_instance_;
};
// -------------------------------------------------------------------

class Login_HeartBeat_Request_30 : public IMessage /* @@protoc_insertion_point(class_definition:login.Login_HeartBeat_Request_30) */ {
 public:
  Login_HeartBeat_Request_30();
  virtual ~Login_HeartBeat_Request_30();

  Login_HeartBeat_Request_30(const Login_HeartBeat_Request_30& from);

  inline Login_HeartBeat_Request_30& operator=(const Login_HeartBeat_Request_30& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Login_HeartBeat_Request_30& default_instance();

  void Swap(Login_HeartBeat_Request_30* other);

  // implements Message ----------------------------------------------

  inline Login_HeartBeat_Request_30* New() const { return New(NULL); }

  Login_HeartBeat_Request_30* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual uint16_t GetOpcode()const override {return LoginOpcode::Login_HeartBeat_Request_30;}
  virtual Type GetType()const override {return typeof(Login_HeartBeat_Request_30);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IMessage;}
  void CopyFrom(const Login_HeartBeat_Request_30& from);
  void MergeFrom(const Login_HeartBeat_Request_30& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Login_HeartBeat_Request_30* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:login.Login_HeartBeat_Request_30)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Login_2eproto();
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static Login_HeartBeat_Request_30* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Login_RegisterEmail_Request_20010

// optional string Name = 1;
inline void Login_RegisterEmail_Request_20010::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_RegisterEmail_Request_20010::name() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Request_20010.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_RegisterEmail_Request_20010::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Request_20010.Name)
}
inline void Login_RegisterEmail_Request_20010::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_RegisterEmail_Request_20010.Name)
}
inline void Login_RegisterEmail_Request_20010::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_RegisterEmail_Request_20010.Name)
}
inline ::std::string* Login_RegisterEmail_Request_20010::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_RegisterEmail_Request_20010.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_RegisterEmail_Request_20010::release_name() {
  // @@protoc_insertion_point(field_release:login.Login_RegisterEmail_Request_20010.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_RegisterEmail_Request_20010::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:login.Login_RegisterEmail_Request_20010.Name)
}

// optional string Email = 2;
inline void Login_RegisterEmail_Request_20010::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_RegisterEmail_Request_20010::email() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Request_20010.Email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_RegisterEmail_Request_20010::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Request_20010.Email)
}
inline void Login_RegisterEmail_Request_20010::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_RegisterEmail_Request_20010.Email)
}
inline void Login_RegisterEmail_Request_20010::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_RegisterEmail_Request_20010.Email)
}
inline ::std::string* Login_RegisterEmail_Request_20010::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_RegisterEmail_Request_20010.Email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_RegisterEmail_Request_20010::release_email() {
  // @@protoc_insertion_point(field_release:login.Login_RegisterEmail_Request_20010.Email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_RegisterEmail_Request_20010::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:login.Login_RegisterEmail_Request_20010.Email)
}

// optional string Password = 3;
inline void Login_RegisterEmail_Request_20010::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_RegisterEmail_Request_20010::password() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Request_20010.Password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_RegisterEmail_Request_20010::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Request_20010.Password)
}
inline void Login_RegisterEmail_Request_20010::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_RegisterEmail_Request_20010.Password)
}
inline void Login_RegisterEmail_Request_20010::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_RegisterEmail_Request_20010.Password)
}
inline ::std::string* Login_RegisterEmail_Request_20010::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_RegisterEmail_Request_20010.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_RegisterEmail_Request_20010::release_password() {
  // @@protoc_insertion_point(field_release:login.Login_RegisterEmail_Request_20010.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_RegisterEmail_Request_20010::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:login.Login_RegisterEmail_Request_20010.Password)
}

// optional int32 RpcId = 90;
inline void Login_RegisterEmail_Request_20010::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Login_RegisterEmail_Request_20010::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Request_20010.RpcId)
  return rpcid_;
}
inline void Login_RegisterEmail_Request_20010::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Request_20010.RpcId)
}

// -------------------------------------------------------------------

// Login_RegisterEmail_Response_20011

// optional int64 AccountId = 2;
inline void Login_RegisterEmail_Response_20011::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Login_RegisterEmail_Response_20011::accountid() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Response_20011.AccountId)
  return accountid_;
}
inline void Login_RegisterEmail_Response_20011::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Response_20011.AccountId)
}

// optional int32 RpcId = 90;
inline void Login_RegisterEmail_Response_20011::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Login_RegisterEmail_Response_20011::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Response_20011.RpcId)
  return rpcid_;
}
inline void Login_RegisterEmail_Response_20011::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Response_20011.RpcId)
}

// optional string Message = 91;
inline void Login_RegisterEmail_Response_20011::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_RegisterEmail_Response_20011::message() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Response_20011.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_RegisterEmail_Response_20011::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Response_20011.Message)
}
inline void Login_RegisterEmail_Response_20011::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_RegisterEmail_Response_20011.Message)
}
inline void Login_RegisterEmail_Response_20011::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_RegisterEmail_Response_20011.Message)
}
inline ::std::string* Login_RegisterEmail_Response_20011::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_RegisterEmail_Response_20011.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_RegisterEmail_Response_20011::release_message() {
  // @@protoc_insertion_point(field_release:login.Login_RegisterEmail_Response_20011.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_RegisterEmail_Response_20011::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:login.Login_RegisterEmail_Response_20011.Message)
}

// optional int32 Error = 92;
inline void Login_RegisterEmail_Response_20011::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Login_RegisterEmail_Response_20011::error() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Response_20011.Error)
  return error_;
}
inline void Login_RegisterEmail_Response_20011::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Response_20011.Error)
}

// -------------------------------------------------------------------

// Login_AccountLogin_Request_20020

// optional string Account = 1;
inline void Login_AccountLogin_Request_20020::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_AccountLogin_Request_20020::account() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Request_20020.Account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Request_20020::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Request_20020.Account)
}
inline void Login_AccountLogin_Request_20020::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Request_20020.Account)
}
inline void Login_AccountLogin_Request_20020::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Request_20020.Account)
}
inline ::std::string* Login_AccountLogin_Request_20020::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Request_20020.Account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_AccountLogin_Request_20020::release_account() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Request_20020.Account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Request_20020::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Request_20020.Account)
}

// optional string Password = 2;
inline void Login_AccountLogin_Request_20020::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_AccountLogin_Request_20020::password() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Request_20020.Password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Request_20020::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Request_20020.Password)
}
inline void Login_AccountLogin_Request_20020::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Request_20020.Password)
}
inline void Login_AccountLogin_Request_20020::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Request_20020.Password)
}
inline ::std::string* Login_AccountLogin_Request_20020::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Request_20020.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_AccountLogin_Request_20020::release_password() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Request_20020.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Request_20020::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Request_20020.Password)
}

// optional int32 RpcId = 90;
inline void Login_AccountLogin_Request_20020::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Login_AccountLogin_Request_20020::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Request_20020.RpcId)
  return rpcid_;
}
inline void Login_AccountLogin_Request_20020::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Request_20020.RpcId)
}

// -------------------------------------------------------------------

// Login_AccountLogin_Response_20021

// optional int64 AccountId = 2;
inline void Login_AccountLogin_Response_20021::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Login_AccountLogin_Response_20021::accountid() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.AccountId)
  return accountid_;
}
inline void Login_AccountLogin_Response_20021::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.AccountId)
}

// optional string Key = 3;
inline void Login_AccountLogin_Response_20021::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_AccountLogin_Response_20021::key() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.Key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Response_20021::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.Key)
}
inline void Login_AccountLogin_Response_20021::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Response_20021.Key)
}
inline void Login_AccountLogin_Response_20021::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Response_20021.Key)
}
inline ::std::string* Login_AccountLogin_Response_20021::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Response_20021.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_AccountLogin_Response_20021::release_key() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Response_20021.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Response_20021::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Response_20021.Key)
}

// optional string ServerIp = 4;
inline void Login_AccountLogin_Response_20021::clear_serverip() {
  serverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_AccountLogin_Response_20021::serverip() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.ServerIp)
  return serverip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Response_20021::set_serverip(const ::std::string& value) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.ServerIp)
}
inline void Login_AccountLogin_Response_20021::set_serverip(const char* value) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Response_20021.ServerIp)
}
inline void Login_AccountLogin_Response_20021::set_serverip(const char* value, size_t size) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Response_20021.ServerIp)
}
inline ::std::string* Login_AccountLogin_Response_20021::mutable_serverip() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Response_20021.ServerIp)
  return serverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_AccountLogin_Response_20021::release_serverip() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Response_20021.ServerIp)
  
  return serverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Response_20021::set_allocated_serverip(::std::string* serverip) {
  if (serverip != NULL) {
    
  } else {
    
  }
  serverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverip);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Response_20021.ServerIp)
}

// optional int32 ServerPort = 5;
inline void Login_AccountLogin_Response_20021::clear_serverport() {
  serverport_ = 0;
}
inline ::google::protobuf::int32 Login_AccountLogin_Response_20021::serverport() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.ServerPort)
  return serverport_;
}
inline void Login_AccountLogin_Response_20021::set_serverport(::google::protobuf::int32 value) {
  
  serverport_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.ServerPort)
}

// optional string ListServerIp = 6;
inline void Login_AccountLogin_Response_20021::clear_listserverip() {
  listserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_AccountLogin_Response_20021::listserverip() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.ListServerIp)
  return listserverip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Response_20021::set_listserverip(const ::std::string& value) {
  
  listserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.ListServerIp)
}
inline void Login_AccountLogin_Response_20021::set_listserverip(const char* value) {
  
  listserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Response_20021.ListServerIp)
}
inline void Login_AccountLogin_Response_20021::set_listserverip(const char* value, size_t size) {
  
  listserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Response_20021.ListServerIp)
}
inline ::std::string* Login_AccountLogin_Response_20021::mutable_listserverip() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Response_20021.ListServerIp)
  return listserverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_AccountLogin_Response_20021::release_listserverip() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Response_20021.ListServerIp)
  
  return listserverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Response_20021::set_allocated_listserverip(::std::string* listserverip) {
  if (listserverip != NULL) {
    
  } else {
    
  }
  listserverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listserverip);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Response_20021.ListServerIp)
}

// optional int32 ListServerPort = 7;
inline void Login_AccountLogin_Response_20021::clear_listserverport() {
  listserverport_ = 0;
}
inline ::google::protobuf::int32 Login_AccountLogin_Response_20021::listserverport() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.ListServerPort)
  return listserverport_;
}
inline void Login_AccountLogin_Response_20021::set_listserverport(::google::protobuf::int32 value) {
  
  listserverport_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.ListServerPort)
}

// optional int64 BanToTime = 10;
inline void Login_AccountLogin_Response_20021::clear_bantotime() {
  bantotime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Login_AccountLogin_Response_20021::bantotime() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.BanToTime)
  return bantotime_;
}
inline void Login_AccountLogin_Response_20021::set_bantotime(::google::protobuf::int64 value) {
  
  bantotime_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.BanToTime)
}

// optional string BanContent = 11;
inline void Login_AccountLogin_Response_20021::clear_bancontent() {
  bancontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_AccountLogin_Response_20021::bancontent() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.BanContent)
  return bancontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Response_20021::set_bancontent(const ::std::string& value) {
  
  bancontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.BanContent)
}
inline void Login_AccountLogin_Response_20021::set_bancontent(const char* value) {
  
  bancontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Response_20021.BanContent)
}
inline void Login_AccountLogin_Response_20021::set_bancontent(const char* value, size_t size) {
  
  bancontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Response_20021.BanContent)
}
inline ::std::string* Login_AccountLogin_Response_20021::mutable_bancontent() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Response_20021.BanContent)
  return bancontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_AccountLogin_Response_20021::release_bancontent() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Response_20021.BanContent)
  
  return bancontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Response_20021::set_allocated_bancontent(::std::string* bancontent) {
  if (bancontent != NULL) {
    
  } else {
    
  }
  bancontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bancontent);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Response_20021.BanContent)
}

// optional int32 RpcId = 90;
inline void Login_AccountLogin_Response_20021::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Login_AccountLogin_Response_20021::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.RpcId)
  return rpcid_;
}
inline void Login_AccountLogin_Response_20021::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.RpcId)
}

// optional string Message = 91;
inline void Login_AccountLogin_Response_20021::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_AccountLogin_Response_20021::message() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Response_20021::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.Message)
}
inline void Login_AccountLogin_Response_20021::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Response_20021.Message)
}
inline void Login_AccountLogin_Response_20021::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Response_20021.Message)
}
inline ::std::string* Login_AccountLogin_Response_20021::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Response_20021.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_AccountLogin_Response_20021::release_message() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Response_20021.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_AccountLogin_Response_20021::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Response_20021.Message)
}

// optional int32 Error = 92;
inline void Login_AccountLogin_Response_20021::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Login_AccountLogin_Response_20021::error() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.Error)
  return error_;
}
inline void Login_AccountLogin_Response_20021::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.Error)
}

// -------------------------------------------------------------------

// Login_WechatLogin_Request_20022

// optional string WxCode = 1;
inline void Login_WechatLogin_Request_20022::clear_wxcode() {
  wxcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_WechatLogin_Request_20022::wxcode() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Request_20022.WxCode)
  return wxcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_WechatLogin_Request_20022::set_wxcode(const ::std::string& value) {
  
  wxcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Request_20022.WxCode)
}
inline void Login_WechatLogin_Request_20022::set_wxcode(const char* value) {
  
  wxcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_WechatLogin_Request_20022.WxCode)
}
inline void Login_WechatLogin_Request_20022::set_wxcode(const char* value, size_t size) {
  
  wxcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_WechatLogin_Request_20022.WxCode)
}
inline ::std::string* Login_WechatLogin_Request_20022::mutable_wxcode() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_WechatLogin_Request_20022.WxCode)
  return wxcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_WechatLogin_Request_20022::release_wxcode() {
  // @@protoc_insertion_point(field_release:login.Login_WechatLogin_Request_20022.WxCode)
  
  return wxcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_WechatLogin_Request_20022::set_allocated_wxcode(::std::string* wxcode) {
  if (wxcode != NULL) {
    
  } else {
    
  }
  wxcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wxcode);
  // @@protoc_insertion_point(field_set_allocated:login.Login_WechatLogin_Request_20022.WxCode)
}

// optional int32 RpcId = 90;
inline void Login_WechatLogin_Request_20022::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Login_WechatLogin_Request_20022::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Request_20022.RpcId)
  return rpcid_;
}
inline void Login_WechatLogin_Request_20022::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Request_20022.RpcId)
}

// -------------------------------------------------------------------

// Login_WechatLogin_Response_20023

// optional int64 AccountId = 2;
inline void Login_WechatLogin_Response_20023::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Login_WechatLogin_Response_20023::accountid() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.AccountId)
  return accountid_;
}
inline void Login_WechatLogin_Response_20023::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.AccountId)
}

// optional string Key = 3;
inline void Login_WechatLogin_Response_20023::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_WechatLogin_Response_20023::key() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.Key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_WechatLogin_Response_20023::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.Key)
}
inline void Login_WechatLogin_Response_20023::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_WechatLogin_Response_20023.Key)
}
inline void Login_WechatLogin_Response_20023::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_WechatLogin_Response_20023.Key)
}
inline ::std::string* Login_WechatLogin_Response_20023::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_WechatLogin_Response_20023.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_WechatLogin_Response_20023::release_key() {
  // @@protoc_insertion_point(field_release:login.Login_WechatLogin_Response_20023.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_WechatLogin_Response_20023::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:login.Login_WechatLogin_Response_20023.Key)
}

// optional string ServerIp = 4;
inline void Login_WechatLogin_Response_20023::clear_serverip() {
  serverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_WechatLogin_Response_20023::serverip() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.ServerIp)
  return serverip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_WechatLogin_Response_20023::set_serverip(const ::std::string& value) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.ServerIp)
}
inline void Login_WechatLogin_Response_20023::set_serverip(const char* value) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_WechatLogin_Response_20023.ServerIp)
}
inline void Login_WechatLogin_Response_20023::set_serverip(const char* value, size_t size) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_WechatLogin_Response_20023.ServerIp)
}
inline ::std::string* Login_WechatLogin_Response_20023::mutable_serverip() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_WechatLogin_Response_20023.ServerIp)
  return serverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_WechatLogin_Response_20023::release_serverip() {
  // @@protoc_insertion_point(field_release:login.Login_WechatLogin_Response_20023.ServerIp)
  
  return serverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_WechatLogin_Response_20023::set_allocated_serverip(::std::string* serverip) {
  if (serverip != NULL) {
    
  } else {
    
  }
  serverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverip);
  // @@protoc_insertion_point(field_set_allocated:login.Login_WechatLogin_Response_20023.ServerIp)
}

// optional int32 ServerPort = 5;
inline void Login_WechatLogin_Response_20023::clear_serverport() {
  serverport_ = 0;
}
inline ::google::protobuf::int32 Login_WechatLogin_Response_20023::serverport() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.ServerPort)
  return serverport_;
}
inline void Login_WechatLogin_Response_20023::set_serverport(::google::protobuf::int32 value) {
  
  serverport_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.ServerPort)
}

// optional string ListServerIp = 6;
inline void Login_WechatLogin_Response_20023::clear_listserverip() {
  listserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_WechatLogin_Response_20023::listserverip() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.ListServerIp)
  return listserverip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_WechatLogin_Response_20023::set_listserverip(const ::std::string& value) {
  
  listserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.ListServerIp)
}
inline void Login_WechatLogin_Response_20023::set_listserverip(const char* value) {
  
  listserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_WechatLogin_Response_20023.ListServerIp)
}
inline void Login_WechatLogin_Response_20023::set_listserverip(const char* value, size_t size) {
  
  listserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_WechatLogin_Response_20023.ListServerIp)
}
inline ::std::string* Login_WechatLogin_Response_20023::mutable_listserverip() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_WechatLogin_Response_20023.ListServerIp)
  return listserverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_WechatLogin_Response_20023::release_listserverip() {
  // @@protoc_insertion_point(field_release:login.Login_WechatLogin_Response_20023.ListServerIp)
  
  return listserverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_WechatLogin_Response_20023::set_allocated_listserverip(::std::string* listserverip) {
  if (listserverip != NULL) {
    
  } else {
    
  }
  listserverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listserverip);
  // @@protoc_insertion_point(field_set_allocated:login.Login_WechatLogin_Response_20023.ListServerIp)
}

// optional int32 ListServerPort = 7;
inline void Login_WechatLogin_Response_20023::clear_listserverport() {
  listserverport_ = 0;
}
inline ::google::protobuf::int32 Login_WechatLogin_Response_20023::listserverport() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.ListServerPort)
  return listserverport_;
}
inline void Login_WechatLogin_Response_20023::set_listserverport(::google::protobuf::int32 value) {
  
  listserverport_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.ListServerPort)
}

// optional int64 BanToTime = 10;
inline void Login_WechatLogin_Response_20023::clear_bantotime() {
  bantotime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Login_WechatLogin_Response_20023::bantotime() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.BanToTime)
  return bantotime_;
}
inline void Login_WechatLogin_Response_20023::set_bantotime(::google::protobuf::int64 value) {
  
  bantotime_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.BanToTime)
}

// optional string BanContent = 11;
inline void Login_WechatLogin_Response_20023::clear_bancontent() {
  bancontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_WechatLogin_Response_20023::bancontent() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.BanContent)
  return bancontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_WechatLogin_Response_20023::set_bancontent(const ::std::string& value) {
  
  bancontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.BanContent)
}
inline void Login_WechatLogin_Response_20023::set_bancontent(const char* value) {
  
  bancontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_WechatLogin_Response_20023.BanContent)
}
inline void Login_WechatLogin_Response_20023::set_bancontent(const char* value, size_t size) {
  
  bancontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_WechatLogin_Response_20023.BanContent)
}
inline ::std::string* Login_WechatLogin_Response_20023::mutable_bancontent() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_WechatLogin_Response_20023.BanContent)
  return bancontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_WechatLogin_Response_20023::release_bancontent() {
  // @@protoc_insertion_point(field_release:login.Login_WechatLogin_Response_20023.BanContent)
  
  return bancontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_WechatLogin_Response_20023::set_allocated_bancontent(::std::string* bancontent) {
  if (bancontent != NULL) {
    
  } else {
    
  }
  bancontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bancontent);
  // @@protoc_insertion_point(field_set_allocated:login.Login_WechatLogin_Response_20023.BanContent)
}

// optional int32 RpcId = 90;
inline void Login_WechatLogin_Response_20023::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Login_WechatLogin_Response_20023::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.RpcId)
  return rpcid_;
}
inline void Login_WechatLogin_Response_20023::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.RpcId)
}

// optional string Message = 91;
inline void Login_WechatLogin_Response_20023::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_WechatLogin_Response_20023::message() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_WechatLogin_Response_20023::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.Message)
}
inline void Login_WechatLogin_Response_20023::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_WechatLogin_Response_20023.Message)
}
inline void Login_WechatLogin_Response_20023::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_WechatLogin_Response_20023.Message)
}
inline ::std::string* Login_WechatLogin_Response_20023::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_WechatLogin_Response_20023.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_WechatLogin_Response_20023::release_message() {
  // @@protoc_insertion_point(field_release:login.Login_WechatLogin_Response_20023.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_WechatLogin_Response_20023::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:login.Login_WechatLogin_Response_20023.Message)
}

// optional int32 Error = 92;
inline void Login_WechatLogin_Response_20023::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Login_WechatLogin_Response_20023::error() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.Error)
  return error_;
}
inline void Login_WechatLogin_Response_20023::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.Error)
}

// -------------------------------------------------------------------

// Login_keyLogin_Request_20024

// optional int64 AccountId = 1;
inline void Login_keyLogin_Request_20024::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Login_keyLogin_Request_20024::accountid() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Request_20024.AccountId)
  return accountid_;
}
inline void Login_keyLogin_Request_20024::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Request_20024.AccountId)
}

// optional string Key = 2;
inline void Login_keyLogin_Request_20024::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_keyLogin_Request_20024::key() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Request_20024.Key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_keyLogin_Request_20024::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Request_20024.Key)
}
inline void Login_keyLogin_Request_20024::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_keyLogin_Request_20024.Key)
}
inline void Login_keyLogin_Request_20024::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_keyLogin_Request_20024.Key)
}
inline ::std::string* Login_keyLogin_Request_20024::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_keyLogin_Request_20024.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_keyLogin_Request_20024::release_key() {
  // @@protoc_insertion_point(field_release:login.Login_keyLogin_Request_20024.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_keyLogin_Request_20024::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:login.Login_keyLogin_Request_20024.Key)
}

// optional int32 RpcId = 90;
inline void Login_keyLogin_Request_20024::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Login_keyLogin_Request_20024::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Request_20024.RpcId)
  return rpcid_;
}
inline void Login_keyLogin_Request_20024::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Request_20024.RpcId)
}

// -------------------------------------------------------------------

// Login_keyLogin_Response_20025

// optional int32 SessionID = 2;
inline void Login_keyLogin_Response_20025::clear_sessionid() {
  sessionid_ = 0;
}
inline ::google::protobuf::int32 Login_keyLogin_Response_20025::sessionid() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Response_20025.SessionID)
  return sessionid_;
}
inline void Login_keyLogin_Response_20025::set_sessionid(::google::protobuf::int32 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Response_20025.SessionID)
}

// optional int32 RpcId = 90;
inline void Login_keyLogin_Response_20025::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 Login_keyLogin_Response_20025::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Response_20025.RpcId)
  return rpcid_;
}
inline void Login_keyLogin_Response_20025::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Response_20025.RpcId)
}

// optional string Message = 91;
inline void Login_keyLogin_Response_20025::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Login_keyLogin_Response_20025::message() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Response_20025.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_keyLogin_Response_20025::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Response_20025.Message)
}
inline void Login_keyLogin_Response_20025::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_keyLogin_Response_20025.Message)
}
inline void Login_keyLogin_Response_20025::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_keyLogin_Response_20025.Message)
}
inline ::std::string* Login_keyLogin_Response_20025::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_keyLogin_Response_20025.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Login_keyLogin_Response_20025::release_message() {
  // @@protoc_insertion_point(field_release:login.Login_keyLogin_Response_20025.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Login_keyLogin_Response_20025::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:login.Login_keyLogin_Response_20025.Message)
}

// optional int32 Error = 92;
inline void Login_keyLogin_Response_20025::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 Login_keyLogin_Response_20025::error() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Response_20025.Error)
  return error_;
}
inline void Login_keyLogin_Response_20025::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Response_20025.Error)
}

// -------------------------------------------------------------------

// Login_HeartBeat_Request_30

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace login

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Login_2eproto__INCLUDED
