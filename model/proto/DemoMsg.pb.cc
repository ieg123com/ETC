// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DemoMsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DemoMsg.pb.h"

#include <algorithm>

#include "module/message/interface/MessageSystemAttribute.h"
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Model {
// Reflection all message types.
REF(MessageHead,ProtoMessage);
REF(ActorLocationTestRequest,ProtoMessage);
REF(ActorLocationTestResponse,ProtoMessage);
REF(ActorLocationMessageTest,ProtoMessage);
REF(ActorTestRequest,ProtoMessage);
REF(ActorTestResponse,ProtoMessage);
REF(ActorMessageTest,ProtoMessage);
// Reflection self the response message type.
REF(ActorLocationTestRequest,ProtoResponseMessage(typeof(ActorLocationTestResponse)));
REF(ActorTestRequest,ProtoResponseMessage(typeof(ActorTestResponse)));

namespace {

const ::google::protobuf::Descriptor* Struct_Position_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Struct_Position_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageHead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageHead_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActorLocationTestRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActorLocationTestRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActorLocationTestResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActorLocationTestResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActorLocationMessageTest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActorLocationMessageTest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActorTestRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActorTestRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActorTestResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActorTestResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActorMessageTest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActorMessageTest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_DemoMsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_DemoMsg_2eproto() {
  protobuf_AddDesc_DemoMsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "DemoMsg.proto");
  GOOGLE_CHECK(file != NULL);
  Struct_Position_descriptor_ = file->message_type(0);
  static const int Struct_Position_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Position, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Position, y_),
  };
  Struct_Position_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Struct_Position_descriptor_,
      Struct_Position::default_instance_,
      Struct_Position_offsets_,
      -1,
      -1,
      -1,
      sizeof(Struct_Position),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Position, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Struct_Position, _is_default_instance_));
  MessageHead_descriptor_ = file->message_type(1);
  static const int MessageHead_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHead, rpcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHead, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHead, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHead, actorid_),
  };
  MessageHead_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageHead_descriptor_,
      MessageHead::default_instance_,
      MessageHead_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageHead),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHead, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHead, _is_default_instance_));
  ActorLocationTestRequest_descriptor_ = file->message_type(2);
  static const int ActorLocationTestRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationTestRequest, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationTestRequest, b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationTestRequest, rpcid_),
  };
  ActorLocationTestRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActorLocationTestRequest_descriptor_,
      ActorLocationTestRequest::default_instance_,
      ActorLocationTestRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActorLocationTestRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationTestRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationTestRequest, _is_default_instance_));
  ActorLocationTestResponse_descriptor_ = file->message_type(3);
  static const int ActorLocationTestResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationTestResponse, sum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationTestResponse, rpcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationTestResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationTestResponse, message_),
  };
  ActorLocationTestResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActorLocationTestResponse_descriptor_,
      ActorLocationTestResponse::default_instance_,
      ActorLocationTestResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActorLocationTestResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationTestResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationTestResponse, _is_default_instance_));
  ActorLocationMessageTest_descriptor_ = file->message_type(4);
  static const int ActorLocationMessageTest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationMessageTest, test_ctx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationMessageTest, rpcid_),
  };
  ActorLocationMessageTest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActorLocationMessageTest_descriptor_,
      ActorLocationMessageTest::default_instance_,
      ActorLocationMessageTest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActorLocationMessageTest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationMessageTest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorLocationMessageTest, _is_default_instance_));
  ActorTestRequest_descriptor_ = file->message_type(5);
  static const int ActorTestRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorTestRequest, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorTestRequest, b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorTestRequest, rpcid_),
  };
  ActorTestRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActorTestRequest_descriptor_,
      ActorTestRequest::default_instance_,
      ActorTestRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActorTestRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorTestRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorTestRequest, _is_default_instance_));
  ActorTestResponse_descriptor_ = file->message_type(6);
  static const int ActorTestResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorTestResponse, sum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorTestResponse, rpcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorTestResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorTestResponse, message_),
  };
  ActorTestResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActorTestResponse_descriptor_,
      ActorTestResponse::default_instance_,
      ActorTestResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActorTestResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorTestResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorTestResponse, _is_default_instance_));
  ActorMessageTest_descriptor_ = file->message_type(7);
  static const int ActorMessageTest_offsets_[1] = {
  };
  ActorMessageTest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActorMessageTest_descriptor_,
      ActorMessageTest::default_instance_,
      ActorMessageTest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActorMessageTest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorMessageTest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorMessageTest, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_DemoMsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Struct_Position_descriptor_, &Struct_Position::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageHead_descriptor_, &MessageHead::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActorLocationTestRequest_descriptor_, &ActorLocationTestRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActorLocationTestResponse_descriptor_, &ActorLocationTestResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActorLocationMessageTest_descriptor_, &ActorLocationMessageTest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActorTestRequest_descriptor_, &ActorTestRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActorTestResponse_descriptor_, &ActorTestResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActorMessageTest_descriptor_, &ActorMessageTest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_DemoMsg_2eproto() {
  delete Struct_Position::default_instance_;
  delete Struct_Position_reflection_;
  delete MessageHead::default_instance_;
  delete MessageHead_reflection_;
  delete ActorLocationTestRequest::default_instance_;
  delete ActorLocationTestRequest_reflection_;
  delete ActorLocationTestResponse::default_instance_;
  delete ActorLocationTestResponse_reflection_;
  delete ActorLocationMessageTest::default_instance_;
  delete ActorLocationMessageTest_reflection_;
  delete ActorTestRequest::default_instance_;
  delete ActorTestRequest_reflection_;
  delete ActorTestResponse::default_instance_;
  delete ActorTestResponse_reflection_;
  delete ActorMessageTest::default_instance_;
  delete ActorMessageTest_reflection_;
}

void protobuf_AddDesc_DemoMsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_DemoMsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rDemoMsg.proto\022\005Model\"\'\n\017Struct_Positio"
    "n\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\"M\n\013MessageHead\022\r"
    "\n\005RpcId\030Z \001(\005\022\r\n\005Error\030[ \001(\005\022\017\n\007Message\030"
    "\\ \001(\t\022\017\n\007ActorId\030] \001(\003\"\?\n\030ActorLocationT"
    "estRequest\022\t\n\001A\030\001 \001(\005\022\t\n\001B\030\002 \001(\005\022\r\n\005RpcI"
    "d\030Z \001(\005\"W\n\031ActorLocationTestResponse\022\013\n\003"
    "Sum\030\001 \001(\005\022\r\n\005RpcId\030Z \001(\005\022\r\n\005Error\030[ \001(\005\022"
    "\017\n\007Message\030\\ \001(\t\";\n\030ActorLocationMessage"
    "Test\022\020\n\010test_ctx\030\001 \001(\t\022\r\n\005RpcId\030Z \001(\005\"7\n"
    "\020ActorTestRequest\022\t\n\001A\030\001 \001(\005\022\t\n\001B\030\002 \001(\005\022"
    "\r\n\005RpcId\030Z \001(\005\"O\n\021ActorTestResponse\022\013\n\003S"
    "um\030\001 \001(\005\022\r\n\005RpcId\030Z \001(\005\022\r\n\005Error\030[ \001(\005\022\017"
    "\n\007Message\030\\ \001(\t\"\022\n\020ActorMessageTestb\006pro"
    "to3", 523);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DemoMsg.proto", &protobuf_RegisterTypes);
  Struct_Position::default_instance_ = new Struct_Position();
  MessageHead::default_instance_ = new MessageHead();
  ActorLocationTestRequest::default_instance_ = new ActorLocationTestRequest();
  ActorLocationTestResponse::default_instance_ = new ActorLocationTestResponse();
  ActorLocationMessageTest::default_instance_ = new ActorLocationMessageTest();
  ActorTestRequest::default_instance_ = new ActorTestRequest();
  ActorTestResponse::default_instance_ = new ActorTestResponse();
  ActorMessageTest::default_instance_ = new ActorMessageTest();
  Struct_Position::default_instance_->InitAsDefaultInstance();
  MessageHead::default_instance_->InitAsDefaultInstance();
  ActorLocationTestRequest::default_instance_->InitAsDefaultInstance();
  ActorLocationTestResponse::default_instance_->InitAsDefaultInstance();
  ActorLocationMessageTest::default_instance_->InitAsDefaultInstance();
  ActorTestRequest::default_instance_->InitAsDefaultInstance();
  ActorTestResponse::default_instance_->InitAsDefaultInstance();
  ActorMessageTest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_DemoMsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_DemoMsg_2eproto {
  StaticDescriptorInitializer_DemoMsg_2eproto() {
    protobuf_AddDesc_DemoMsg_2eproto();
  }
} static_descriptor_initializer_DemoMsg_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Struct_Position::kXFieldNumber;
const int Struct_Position::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Struct_Position::Struct_Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Model.Struct_Position)
}

void Struct_Position::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Struct_Position::Struct_Position(const Struct_Position& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Model.Struct_Position)
}

void Struct_Position::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
}

Struct_Position::~Struct_Position() {
  // @@protoc_insertion_point(destructor:Model.Struct_Position)
  SharedDtor();
}

void Struct_Position::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Struct_Position::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Struct_Position::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Struct_Position_descriptor_;
}

const Struct_Position& Struct_Position::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DemoMsg_2eproto();
  return *default_instance_;
}

Struct_Position* Struct_Position::default_instance_ = NULL;

Struct_Position* Struct_Position::New(::google::protobuf::Arena* arena) const {
  Struct_Position* n = new Struct_Position;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Struct_Position::Clear() {
// @@protoc_insertion_point(message_clear_start:Model.Struct_Position)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Struct_Position, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Struct_Position*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, y_);

#undef ZR_HELPER_
#undef ZR_

}

bool Struct_Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Model.Struct_Position)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (tag == 16) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Model.Struct_Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Model.Struct_Position)
  return false;
#undef DO_
}

void Struct_Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Model.Struct_Position)
  // optional int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // @@protoc_insertion_point(serialize_end:Model.Struct_Position)
}

::google::protobuf::uint8* Struct_Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Model.Struct_Position)
  // optional int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Model.Struct_Position)
  return target;
}

int Struct_Position::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Model.Struct_Position)
  int total_size = 0;

  // optional int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // optional int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Struct_Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Model.Struct_Position)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Struct_Position* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Struct_Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Model.Struct_Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Model.Struct_Position)
    MergeFrom(*source);
  }
}

void Struct_Position::MergeFrom(const Struct_Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Model.Struct_Position)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Struct_Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Model.Struct_Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Struct_Position::CopyFrom(const Struct_Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Model.Struct_Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Struct_Position::IsInitialized() const {

  return true;
}

void Struct_Position::Swap(Struct_Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Struct_Position::InternalSwap(Struct_Position* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Struct_Position::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Struct_Position_descriptor_;
  metadata.reflection = Struct_Position_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Struct_Position

// optional int32 x = 1;
void Struct_Position::clear_x() {
  x_ = 0;
}
 ::google::protobuf::int32 Struct_Position::x() const {
  // @@protoc_insertion_point(field_get:Model.Struct_Position.x)
  return x_;
}
 void Struct_Position::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Model.Struct_Position.x)
}

// optional int32 y = 2;
void Struct_Position::clear_y() {
  y_ = 0;
}
 ::google::protobuf::int32 Struct_Position::y() const {
  // @@protoc_insertion_point(field_get:Model.Struct_Position.y)
  return y_;
}
 void Struct_Position::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Model.Struct_Position.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageHead::kRpcIdFieldNumber;
const int MessageHead::kErrorFieldNumber;
const int MessageHead::kMessageFieldNumber;
const int MessageHead::kActorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageHead::MessageHead()
  : IMessage(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Model.MessageHead)
}

void MessageHead::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageHead::MessageHead(const MessageHead& from)
  : IMessage(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Model.MessageHead)
}

void MessageHead::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rpcid_ = 0;
  error_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actorid_ = GOOGLE_LONGLONG(0);
}

MessageHead::~MessageHead() {
  // @@protoc_insertion_point(destructor:Model.MessageHead)
  SharedDtor();
}

void MessageHead::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MessageHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageHead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageHead_descriptor_;
}

const MessageHead& MessageHead::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DemoMsg_2eproto();
  return *default_instance_;
}

MessageHead* MessageHead::default_instance_ = NULL;

MessageHead* MessageHead::New(::google::protobuf::Arena* arena) const {
  MessageHead* n = new MessageHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageHead::Clear() {
// @@protoc_insertion_point(message_clear_start:Model.MessageHead)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MessageHead, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MessageHead*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rpcid_, error_);
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actorid_ = GOOGLE_LONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

}

bool MessageHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Model.MessageHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(728)) goto parse_Error;
        break;
      }

      // optional int32 Error = 91;
      case 91: {
        if (tag == 728) {
         parse_Error:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(738)) goto parse_Message;
        break;
      }

      // optional string Message = 92;
      case 92: {
        if (tag == 738) {
         parse_Message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Model.MessageHead.Message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(744)) goto parse_ActorId;
        break;
      }

      // optional int64 ActorId = 93;
      case 93: {
        if (tag == 744) {
         parse_ActorId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Model.MessageHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Model.MessageHead)
  return false;
#undef DO_
}

void MessageHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Model.MessageHead)
  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // optional int32 Error = 91;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(91, this->error(), output);
  }

  // optional string Message = 92;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Model.MessageHead.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      92, this->message(), output);
  }

  // optional int64 ActorId = 93;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(93, this->actorid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Model.MessageHead)
}

::google::protobuf::uint8* MessageHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Model.MessageHead)
  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // optional int32 Error = 91;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(91, this->error(), target);
  }

  // optional string Message = 92;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Model.MessageHead.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        92, this->message(), target);
  }

  // optional int64 ActorId = 93;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(93, this->actorid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Model.MessageHead)
  return target;
}

int MessageHead::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Model.MessageHead)
  int total_size = 0;

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  // optional int32 Error = 91;
  if (this->error() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // optional string Message = 92;
  if (this->message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional int64 ActorId = 93;
  if (this->actorid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->actorid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Model.MessageHead)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageHead* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Model.MessageHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Model.MessageHead)
    MergeFrom(*source);
  }
}

void MessageHead::MergeFrom(const MessageHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Model.MessageHead)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
}

void MessageHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Model.MessageHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageHead::CopyFrom(const MessageHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Model.MessageHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageHead::IsInitialized() const {

  return true;
}

void MessageHead::Swap(MessageHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageHead::InternalSwap(MessageHead* other) {
  std::swap(rpcid_, other->rpcid_);
  std::swap(error_, other->error_);
  message_.Swap(&other->message_);
  std::swap(actorid_, other->actorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageHead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageHead_descriptor_;
  metadata.reflection = MessageHead_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageHead

// optional int32 RpcId = 90;
void MessageHead::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 MessageHead::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.MessageHead.RpcId)
  return rpcid_;
}
 void MessageHead::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.MessageHead.RpcId)
}

// optional int32 Error = 91;
void MessageHead::clear_error() {
  error_ = 0;
}
 ::google::protobuf::int32 MessageHead::error() const {
  // @@protoc_insertion_point(field_get:Model.MessageHead.Error)
  return error_;
}
 void MessageHead::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:Model.MessageHead.Error)
}

// optional string Message = 92;
void MessageHead::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageHead::message() const {
  // @@protoc_insertion_point(field_get:Model.MessageHead.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageHead::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Model.MessageHead.Message)
}
 void MessageHead::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Model.MessageHead.Message)
}
 void MessageHead::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Model.MessageHead.Message)
}
 ::std::string* MessageHead::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:Model.MessageHead.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageHead::release_message() {
  // @@protoc_insertion_point(field_release:Model.MessageHead.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageHead::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Model.MessageHead.Message)
}

// optional int64 ActorId = 93;
void MessageHead::clear_actorid() {
  actorid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageHead::actorid() const {
  // @@protoc_insertion_point(field_get:Model.MessageHead.ActorId)
  return actorid_;
}
 void MessageHead::set_actorid(::google::protobuf::int64 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:Model.MessageHead.ActorId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorLocationTestRequest::kAFieldNumber;
const int ActorLocationTestRequest::kBFieldNumber;
const int ActorLocationTestRequest::kRpcIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorLocationTestRequest::ActorLocationTestRequest()
  : IActorLocationRequest(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Model.ActorLocationTestRequest)
}

void ActorLocationTestRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ActorLocationTestRequest::ActorLocationTestRequest(const ActorLocationTestRequest& from)
  : IActorLocationRequest(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Model.ActorLocationTestRequest)
}

void ActorLocationTestRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  a_ = 0;
  b_ = 0;
  rpcid_ = 0;
}

ActorLocationTestRequest::~ActorLocationTestRequest() {
  // @@protoc_insertion_point(destructor:Model.ActorLocationTestRequest)
  SharedDtor();
}

void ActorLocationTestRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActorLocationTestRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorLocationTestRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActorLocationTestRequest_descriptor_;
}

const ActorLocationTestRequest& ActorLocationTestRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DemoMsg_2eproto();
  return *default_instance_;
}

ActorLocationTestRequest* ActorLocationTestRequest::default_instance_ = NULL;

ActorLocationTestRequest* ActorLocationTestRequest::New(::google::protobuf::Arena* arena) const {
  ActorLocationTestRequest* n = new ActorLocationTestRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorLocationTestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Model.ActorLocationTestRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ActorLocationTestRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ActorLocationTestRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(a_, rpcid_);

#undef ZR_HELPER_
#undef ZR_

}

bool ActorLocationTestRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Model.ActorLocationTestRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 A = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_B;
        break;
      }

      // optional int32 B = 2;
      case 2: {
        if (tag == 16) {
         parse_B:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_RpcId;
        break;
      }

      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
         parse_RpcId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Model.ActorLocationTestRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Model.ActorLocationTestRequest)
  return false;
#undef DO_
}

void ActorLocationTestRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Model.ActorLocationTestRequest)
  // optional int32 A = 1;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional int32 B = 2;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->b(), output);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Model.ActorLocationTestRequest)
}

::google::protobuf::uint8* ActorLocationTestRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Model.ActorLocationTestRequest)
  // optional int32 A = 1;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional int32 B = 2;
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->b(), target);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Model.ActorLocationTestRequest)
  return target;
}

int ActorLocationTestRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Model.ActorLocationTestRequest)
  int total_size = 0;

  // optional int32 A = 1;
  if (this->a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  // optional int32 B = 2;
  if (this->b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorLocationTestRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Model.ActorLocationTestRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActorLocationTestRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorLocationTestRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Model.ActorLocationTestRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Model.ActorLocationTestRequest)
    MergeFrom(*source);
  }
}

void ActorLocationTestRequest::MergeFrom(const ActorLocationTestRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Model.ActorLocationTestRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
}

void ActorLocationTestRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Model.ActorLocationTestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorLocationTestRequest::CopyFrom(const ActorLocationTestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Model.ActorLocationTestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorLocationTestRequest::IsInitialized() const {

  return true;
}

void ActorLocationTestRequest::Swap(ActorLocationTestRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorLocationTestRequest::InternalSwap(ActorLocationTestRequest* other) {
  std::swap(a_, other->a_);
  std::swap(b_, other->b_);
  std::swap(rpcid_, other->rpcid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorLocationTestRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActorLocationTestRequest_descriptor_;
  metadata.reflection = ActorLocationTestRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorLocationTestRequest

// optional int32 A = 1;
void ActorLocationTestRequest::clear_a() {
  a_ = 0;
}
 ::google::protobuf::int32 ActorLocationTestRequest::a() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestRequest.A)
  return a_;
}
 void ActorLocationTestRequest::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestRequest.A)
}

// optional int32 B = 2;
void ActorLocationTestRequest::clear_b() {
  b_ = 0;
}
 ::google::protobuf::int32 ActorLocationTestRequest::b() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestRequest.B)
  return b_;
}
 void ActorLocationTestRequest::set_b(::google::protobuf::int32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestRequest.B)
}

// optional int32 RpcId = 90;
void ActorLocationTestRequest::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 ActorLocationTestRequest::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestRequest.RpcId)
  return rpcid_;
}
 void ActorLocationTestRequest::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestRequest.RpcId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorLocationTestResponse::kSumFieldNumber;
const int ActorLocationTestResponse::kRpcIdFieldNumber;
const int ActorLocationTestResponse::kErrorFieldNumber;
const int ActorLocationTestResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorLocationTestResponse::ActorLocationTestResponse()
  : IActorLocationResponse(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Model.ActorLocationTestResponse)
}

void ActorLocationTestResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ActorLocationTestResponse::ActorLocationTestResponse(const ActorLocationTestResponse& from)
  : IActorLocationResponse(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Model.ActorLocationTestResponse)
}

void ActorLocationTestResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sum_ = 0;
  rpcid_ = 0;
  error_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ActorLocationTestResponse::~ActorLocationTestResponse() {
  // @@protoc_insertion_point(destructor:Model.ActorLocationTestResponse)
  SharedDtor();
}

void ActorLocationTestResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ActorLocationTestResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorLocationTestResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActorLocationTestResponse_descriptor_;
}

const ActorLocationTestResponse& ActorLocationTestResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DemoMsg_2eproto();
  return *default_instance_;
}

ActorLocationTestResponse* ActorLocationTestResponse::default_instance_ = NULL;

ActorLocationTestResponse* ActorLocationTestResponse::New(::google::protobuf::Arena* arena) const {
  ActorLocationTestResponse* n = new ActorLocationTestResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorLocationTestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Model.ActorLocationTestResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ActorLocationTestResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ActorLocationTestResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sum_, rpcid_);
  error_ = 0;
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ActorLocationTestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Model.ActorLocationTestResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Sum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_RpcId;
        break;
      }

      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
         parse_RpcId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(728)) goto parse_Error;
        break;
      }

      // optional int32 Error = 91;
      case 91: {
        if (tag == 728) {
         parse_Error:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(738)) goto parse_Message;
        break;
      }

      // optional string Message = 92;
      case 92: {
        if (tag == 738) {
         parse_Message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Model.ActorLocationTestResponse.Message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Model.ActorLocationTestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Model.ActorLocationTestResponse)
  return false;
#undef DO_
}

void ActorLocationTestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Model.ActorLocationTestResponse)
  // optional int32 Sum = 1;
  if (this->sum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sum(), output);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // optional int32 Error = 91;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(91, this->error(), output);
  }

  // optional string Message = 92;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Model.ActorLocationTestResponse.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      92, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:Model.ActorLocationTestResponse)
}

::google::protobuf::uint8* ActorLocationTestResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Model.ActorLocationTestResponse)
  // optional int32 Sum = 1;
  if (this->sum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sum(), target);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // optional int32 Error = 91;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(91, this->error(), target);
  }

  // optional string Message = 92;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Model.ActorLocationTestResponse.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        92, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Model.ActorLocationTestResponse)
  return target;
}

int ActorLocationTestResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Model.ActorLocationTestResponse)
  int total_size = 0;

  // optional int32 Sum = 1;
  if (this->sum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sum());
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  // optional int32 Error = 91;
  if (this->error() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // optional string Message = 92;
  if (this->message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorLocationTestResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Model.ActorLocationTestResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActorLocationTestResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorLocationTestResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Model.ActorLocationTestResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Model.ActorLocationTestResponse)
    MergeFrom(*source);
  }
}

void ActorLocationTestResponse::MergeFrom(const ActorLocationTestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Model.ActorLocationTestResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sum() != 0) {
    set_sum(from.sum());
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void ActorLocationTestResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Model.ActorLocationTestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorLocationTestResponse::CopyFrom(const ActorLocationTestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Model.ActorLocationTestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorLocationTestResponse::IsInitialized() const {

  return true;
}

void ActorLocationTestResponse::Swap(ActorLocationTestResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorLocationTestResponse::InternalSwap(ActorLocationTestResponse* other) {
  std::swap(sum_, other->sum_);
  std::swap(rpcid_, other->rpcid_);
  std::swap(error_, other->error_);
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorLocationTestResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActorLocationTestResponse_descriptor_;
  metadata.reflection = ActorLocationTestResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorLocationTestResponse

// optional int32 Sum = 1;
void ActorLocationTestResponse::clear_sum() {
  sum_ = 0;
}
 ::google::protobuf::int32 ActorLocationTestResponse::sum() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestResponse.Sum)
  return sum_;
}
 void ActorLocationTestResponse::set_sum(::google::protobuf::int32 value) {
  
  sum_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestResponse.Sum)
}

// optional int32 RpcId = 90;
void ActorLocationTestResponse::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 ActorLocationTestResponse::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestResponse.RpcId)
  return rpcid_;
}
 void ActorLocationTestResponse::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestResponse.RpcId)
}

// optional int32 Error = 91;
void ActorLocationTestResponse::clear_error() {
  error_ = 0;
}
 ::google::protobuf::int32 ActorLocationTestResponse::error() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestResponse.Error)
  return error_;
}
 void ActorLocationTestResponse::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestResponse.Error)
}

// optional string Message = 92;
void ActorLocationTestResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ActorLocationTestResponse::message() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestResponse.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ActorLocationTestResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestResponse.Message)
}
 void ActorLocationTestResponse::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Model.ActorLocationTestResponse.Message)
}
 void ActorLocationTestResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Model.ActorLocationTestResponse.Message)
}
 ::std::string* ActorLocationTestResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:Model.ActorLocationTestResponse.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ActorLocationTestResponse::release_message() {
  // @@protoc_insertion_point(field_release:Model.ActorLocationTestResponse.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ActorLocationTestResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Model.ActorLocationTestResponse.Message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorLocationMessageTest::kTestCtxFieldNumber;
const int ActorLocationMessageTest::kRpcIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorLocationMessageTest::ActorLocationMessageTest()
  : IActorLocationMessage(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Model.ActorLocationMessageTest)
}

void ActorLocationMessageTest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ActorLocationMessageTest::ActorLocationMessageTest(const ActorLocationMessageTest& from)
  : IActorLocationMessage(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Model.ActorLocationMessageTest)
}

void ActorLocationMessageTest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  test_ctx_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpcid_ = 0;
}

ActorLocationMessageTest::~ActorLocationMessageTest() {
  // @@protoc_insertion_point(destructor:Model.ActorLocationMessageTest)
  SharedDtor();
}

void ActorLocationMessageTest::SharedDtor() {
  test_ctx_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ActorLocationMessageTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorLocationMessageTest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActorLocationMessageTest_descriptor_;
}

const ActorLocationMessageTest& ActorLocationMessageTest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DemoMsg_2eproto();
  return *default_instance_;
}

ActorLocationMessageTest* ActorLocationMessageTest::default_instance_ = NULL;

ActorLocationMessageTest* ActorLocationMessageTest::New(::google::protobuf::Arena* arena) const {
  ActorLocationMessageTest* n = new ActorLocationMessageTest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorLocationMessageTest::Clear() {
// @@protoc_insertion_point(message_clear_start:Model.ActorLocationMessageTest)
  test_ctx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpcid_ = 0;
}

bool ActorLocationMessageTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Model.ActorLocationMessageTest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string test_ctx = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_ctx()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_ctx().data(), this->test_ctx().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Model.ActorLocationMessageTest.test_ctx"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_RpcId;
        break;
      }

      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
         parse_RpcId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Model.ActorLocationMessageTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Model.ActorLocationMessageTest)
  return false;
#undef DO_
}

void ActorLocationMessageTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Model.ActorLocationMessageTest)
  // optional string test_ctx = 1;
  if (this->test_ctx().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_ctx().data(), this->test_ctx().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Model.ActorLocationMessageTest.test_ctx");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->test_ctx(), output);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Model.ActorLocationMessageTest)
}

::google::protobuf::uint8* ActorLocationMessageTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Model.ActorLocationMessageTest)
  // optional string test_ctx = 1;
  if (this->test_ctx().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_ctx().data(), this->test_ctx().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Model.ActorLocationMessageTest.test_ctx");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->test_ctx(), target);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Model.ActorLocationMessageTest)
  return target;
}

int ActorLocationMessageTest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Model.ActorLocationMessageTest)
  int total_size = 0;

  // optional string test_ctx = 1;
  if (this->test_ctx().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_ctx());
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorLocationMessageTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Model.ActorLocationMessageTest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActorLocationMessageTest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorLocationMessageTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Model.ActorLocationMessageTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Model.ActorLocationMessageTest)
    MergeFrom(*source);
  }
}

void ActorLocationMessageTest::MergeFrom(const ActorLocationMessageTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Model.ActorLocationMessageTest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.test_ctx().size() > 0) {

    test_ctx_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_ctx_);
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
}

void ActorLocationMessageTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Model.ActorLocationMessageTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorLocationMessageTest::CopyFrom(const ActorLocationMessageTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Model.ActorLocationMessageTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorLocationMessageTest::IsInitialized() const {

  return true;
}

void ActorLocationMessageTest::Swap(ActorLocationMessageTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorLocationMessageTest::InternalSwap(ActorLocationMessageTest* other) {
  test_ctx_.Swap(&other->test_ctx_);
  std::swap(rpcid_, other->rpcid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorLocationMessageTest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActorLocationMessageTest_descriptor_;
  metadata.reflection = ActorLocationMessageTest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorLocationMessageTest

// optional string test_ctx = 1;
void ActorLocationMessageTest::clear_test_ctx() {
  test_ctx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ActorLocationMessageTest::test_ctx() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationMessageTest.test_ctx)
  return test_ctx_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ActorLocationMessageTest::set_test_ctx(const ::std::string& value) {
  
  test_ctx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Model.ActorLocationMessageTest.test_ctx)
}
 void ActorLocationMessageTest::set_test_ctx(const char* value) {
  
  test_ctx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Model.ActorLocationMessageTest.test_ctx)
}
 void ActorLocationMessageTest::set_test_ctx(const char* value, size_t size) {
  
  test_ctx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Model.ActorLocationMessageTest.test_ctx)
}
 ::std::string* ActorLocationMessageTest::mutable_test_ctx() {
  
  // @@protoc_insertion_point(field_mutable:Model.ActorLocationMessageTest.test_ctx)
  return test_ctx_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ActorLocationMessageTest::release_test_ctx() {
  // @@protoc_insertion_point(field_release:Model.ActorLocationMessageTest.test_ctx)
  
  return test_ctx_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ActorLocationMessageTest::set_allocated_test_ctx(::std::string* test_ctx) {
  if (test_ctx != NULL) {
    
  } else {
    
  }
  test_ctx_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), test_ctx);
  // @@protoc_insertion_point(field_set_allocated:Model.ActorLocationMessageTest.test_ctx)
}

// optional int32 RpcId = 90;
void ActorLocationMessageTest::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 ActorLocationMessageTest::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationMessageTest.RpcId)
  return rpcid_;
}
 void ActorLocationMessageTest::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationMessageTest.RpcId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorTestRequest::kAFieldNumber;
const int ActorTestRequest::kBFieldNumber;
const int ActorTestRequest::kRpcIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorTestRequest::ActorTestRequest()
  : IActorRequest(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Model.ActorTestRequest)
}

void ActorTestRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ActorTestRequest::ActorTestRequest(const ActorTestRequest& from)
  : IActorRequest(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Model.ActorTestRequest)
}

void ActorTestRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  a_ = 0;
  b_ = 0;
  rpcid_ = 0;
}

ActorTestRequest::~ActorTestRequest() {
  // @@protoc_insertion_point(destructor:Model.ActorTestRequest)
  SharedDtor();
}

void ActorTestRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActorTestRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorTestRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActorTestRequest_descriptor_;
}

const ActorTestRequest& ActorTestRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DemoMsg_2eproto();
  return *default_instance_;
}

ActorTestRequest* ActorTestRequest::default_instance_ = NULL;

ActorTestRequest* ActorTestRequest::New(::google::protobuf::Arena* arena) const {
  ActorTestRequest* n = new ActorTestRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorTestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Model.ActorTestRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ActorTestRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ActorTestRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(a_, rpcid_);

#undef ZR_HELPER_
#undef ZR_

}

bool ActorTestRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Model.ActorTestRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 A = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_B;
        break;
      }

      // optional int32 B = 2;
      case 2: {
        if (tag == 16) {
         parse_B:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_RpcId;
        break;
      }

      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
         parse_RpcId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Model.ActorTestRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Model.ActorTestRequest)
  return false;
#undef DO_
}

void ActorTestRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Model.ActorTestRequest)
  // optional int32 A = 1;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional int32 B = 2;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->b(), output);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Model.ActorTestRequest)
}

::google::protobuf::uint8* ActorTestRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Model.ActorTestRequest)
  // optional int32 A = 1;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional int32 B = 2;
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->b(), target);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Model.ActorTestRequest)
  return target;
}

int ActorTestRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Model.ActorTestRequest)
  int total_size = 0;

  // optional int32 A = 1;
  if (this->a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  // optional int32 B = 2;
  if (this->b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorTestRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Model.ActorTestRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActorTestRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorTestRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Model.ActorTestRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Model.ActorTestRequest)
    MergeFrom(*source);
  }
}

void ActorTestRequest::MergeFrom(const ActorTestRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Model.ActorTestRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
}

void ActorTestRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Model.ActorTestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorTestRequest::CopyFrom(const ActorTestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Model.ActorTestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorTestRequest::IsInitialized() const {

  return true;
}

void ActorTestRequest::Swap(ActorTestRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorTestRequest::InternalSwap(ActorTestRequest* other) {
  std::swap(a_, other->a_);
  std::swap(b_, other->b_);
  std::swap(rpcid_, other->rpcid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorTestRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActorTestRequest_descriptor_;
  metadata.reflection = ActorTestRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorTestRequest

// optional int32 A = 1;
void ActorTestRequest::clear_a() {
  a_ = 0;
}
 ::google::protobuf::int32 ActorTestRequest::a() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestRequest.A)
  return a_;
}
 void ActorTestRequest::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorTestRequest.A)
}

// optional int32 B = 2;
void ActorTestRequest::clear_b() {
  b_ = 0;
}
 ::google::protobuf::int32 ActorTestRequest::b() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestRequest.B)
  return b_;
}
 void ActorTestRequest::set_b(::google::protobuf::int32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorTestRequest.B)
}

// optional int32 RpcId = 90;
void ActorTestRequest::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 ActorTestRequest::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestRequest.RpcId)
  return rpcid_;
}
 void ActorTestRequest::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorTestRequest.RpcId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorTestResponse::kSumFieldNumber;
const int ActorTestResponse::kRpcIdFieldNumber;
const int ActorTestResponse::kErrorFieldNumber;
const int ActorTestResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorTestResponse::ActorTestResponse()
  : IActorResponse(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Model.ActorTestResponse)
}

void ActorTestResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ActorTestResponse::ActorTestResponse(const ActorTestResponse& from)
  : IActorResponse(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Model.ActorTestResponse)
}

void ActorTestResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sum_ = 0;
  rpcid_ = 0;
  error_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ActorTestResponse::~ActorTestResponse() {
  // @@protoc_insertion_point(destructor:Model.ActorTestResponse)
  SharedDtor();
}

void ActorTestResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ActorTestResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorTestResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActorTestResponse_descriptor_;
}

const ActorTestResponse& ActorTestResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DemoMsg_2eproto();
  return *default_instance_;
}

ActorTestResponse* ActorTestResponse::default_instance_ = NULL;

ActorTestResponse* ActorTestResponse::New(::google::protobuf::Arena* arena) const {
  ActorTestResponse* n = new ActorTestResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorTestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Model.ActorTestResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ActorTestResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ActorTestResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sum_, rpcid_);
  error_ = 0;
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ActorTestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Model.ActorTestResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Sum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_RpcId;
        break;
      }

      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
         parse_RpcId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(728)) goto parse_Error;
        break;
      }

      // optional int32 Error = 91;
      case 91: {
        if (tag == 728) {
         parse_Error:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(738)) goto parse_Message;
        break;
      }

      // optional string Message = 92;
      case 92: {
        if (tag == 738) {
         parse_Message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Model.ActorTestResponse.Message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Model.ActorTestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Model.ActorTestResponse)
  return false;
#undef DO_
}

void ActorTestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Model.ActorTestResponse)
  // optional int32 Sum = 1;
  if (this->sum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sum(), output);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // optional int32 Error = 91;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(91, this->error(), output);
  }

  // optional string Message = 92;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Model.ActorTestResponse.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      92, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:Model.ActorTestResponse)
}

::google::protobuf::uint8* ActorTestResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Model.ActorTestResponse)
  // optional int32 Sum = 1;
  if (this->sum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sum(), target);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // optional int32 Error = 91;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(91, this->error(), target);
  }

  // optional string Message = 92;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Model.ActorTestResponse.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        92, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Model.ActorTestResponse)
  return target;
}

int ActorTestResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Model.ActorTestResponse)
  int total_size = 0;

  // optional int32 Sum = 1;
  if (this->sum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sum());
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  // optional int32 Error = 91;
  if (this->error() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // optional string Message = 92;
  if (this->message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorTestResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Model.ActorTestResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActorTestResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorTestResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Model.ActorTestResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Model.ActorTestResponse)
    MergeFrom(*source);
  }
}

void ActorTestResponse::MergeFrom(const ActorTestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Model.ActorTestResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sum() != 0) {
    set_sum(from.sum());
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void ActorTestResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Model.ActorTestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorTestResponse::CopyFrom(const ActorTestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Model.ActorTestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorTestResponse::IsInitialized() const {

  return true;
}

void ActorTestResponse::Swap(ActorTestResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorTestResponse::InternalSwap(ActorTestResponse* other) {
  std::swap(sum_, other->sum_);
  std::swap(rpcid_, other->rpcid_);
  std::swap(error_, other->error_);
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorTestResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActorTestResponse_descriptor_;
  metadata.reflection = ActorTestResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorTestResponse

// optional int32 Sum = 1;
void ActorTestResponse::clear_sum() {
  sum_ = 0;
}
 ::google::protobuf::int32 ActorTestResponse::sum() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestResponse.Sum)
  return sum_;
}
 void ActorTestResponse::set_sum(::google::protobuf::int32 value) {
  
  sum_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorTestResponse.Sum)
}

// optional int32 RpcId = 90;
void ActorTestResponse::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 ActorTestResponse::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestResponse.RpcId)
  return rpcid_;
}
 void ActorTestResponse::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorTestResponse.RpcId)
}

// optional int32 Error = 91;
void ActorTestResponse::clear_error() {
  error_ = 0;
}
 ::google::protobuf::int32 ActorTestResponse::error() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestResponse.Error)
  return error_;
}
 void ActorTestResponse::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorTestResponse.Error)
}

// optional string Message = 92;
void ActorTestResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ActorTestResponse::message() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestResponse.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ActorTestResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Model.ActorTestResponse.Message)
}
 void ActorTestResponse::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Model.ActorTestResponse.Message)
}
 void ActorTestResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Model.ActorTestResponse.Message)
}
 ::std::string* ActorTestResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:Model.ActorTestResponse.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ActorTestResponse::release_message() {
  // @@protoc_insertion_point(field_release:Model.ActorTestResponse.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ActorTestResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Model.ActorTestResponse.Message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorMessageTest::ActorMessageTest()
  : IActorMessage(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Model.ActorMessageTest)
}

void ActorMessageTest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ActorMessageTest::ActorMessageTest(const ActorMessageTest& from)
  : IActorMessage(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Model.ActorMessageTest)
}

void ActorMessageTest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ActorMessageTest::~ActorMessageTest() {
  // @@protoc_insertion_point(destructor:Model.ActorMessageTest)
  SharedDtor();
}

void ActorMessageTest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActorMessageTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorMessageTest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActorMessageTest_descriptor_;
}

const ActorMessageTest& ActorMessageTest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DemoMsg_2eproto();
  return *default_instance_;
}

ActorMessageTest* ActorMessageTest::default_instance_ = NULL;

ActorMessageTest* ActorMessageTest::New(::google::protobuf::Arena* arena) const {
  ActorMessageTest* n = new ActorMessageTest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorMessageTest::Clear() {
// @@protoc_insertion_point(message_clear_start:Model.ActorMessageTest)
}

bool ActorMessageTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Model.ActorMessageTest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:Model.ActorMessageTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Model.ActorMessageTest)
  return false;
#undef DO_
}

void ActorMessageTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Model.ActorMessageTest)
  // @@protoc_insertion_point(serialize_end:Model.ActorMessageTest)
}

::google::protobuf::uint8* ActorMessageTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Model.ActorMessageTest)
  // @@protoc_insertion_point(serialize_to_array_end:Model.ActorMessageTest)
  return target;
}

int ActorMessageTest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Model.ActorMessageTest)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorMessageTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Model.ActorMessageTest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActorMessageTest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorMessageTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Model.ActorMessageTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Model.ActorMessageTest)
    MergeFrom(*source);
  }
}

void ActorMessageTest::MergeFrom(const ActorMessageTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Model.ActorMessageTest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void ActorMessageTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Model.ActorMessageTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorMessageTest::CopyFrom(const ActorMessageTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Model.ActorMessageTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorMessageTest::IsInitialized() const {

  return true;
}

void ActorMessageTest::Swap(ActorMessageTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorMessageTest::InternalSwap(ActorMessageTest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorMessageTest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActorMessageTest_descriptor_;
  metadata.reflection = ActorMessageTest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorMessageTest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Model

// @@protoc_insertion_point(global_scope)
