// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DemoMsg.proto

#ifndef PROTOBUF_DemoMsg_2eproto__INCLUDED
#define PROTOBUF_DemoMsg_2eproto__INCLUDED

#include <string>
#include "type/type_factory.h"
#include "opcode/DemoMsgOpcode.h"
#include "module/message/MessageDefines.h"
#include "etc/etc_config.h"

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#undef GetMessage

namespace Model {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_DemoMsg_2eproto();
void protobuf_AssignDesc_DemoMsg_2eproto();
void protobuf_ShutdownFile_DemoMsg_2eproto();

class ActorLocationMessageTest;
class ActorLocationTestRequest;
class ActorLocationTestResponse;
class ActorMessageTest;
class ActorTestRequest;
class ActorTestResponse;
class MessageHead;
class Struct_Position;

// ===================================================================

class Struct_Position : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Model.Struct_Position) */ {
 public:
  Struct_Position();
  virtual ~Struct_Position();

  Struct_Position(const Struct_Position& from);

  inline Struct_Position& operator=(const Struct_Position& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Struct_Position& default_instance();

  void Swap(Struct_Position* other);

  // implements Message ----------------------------------------------

  inline Struct_Position* New() const { return New(NULL); }

  Struct_Position* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Struct_Position& from);
  void MergeFrom(const Struct_Position& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Struct_Position* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Model.Struct_Position)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_DemoMsg_2eproto();
  friend void protobuf_AssignDesc_DemoMsg_2eproto();
  friend void protobuf_ShutdownFile_DemoMsg_2eproto();

  void InitAsDefaultInstance();
  static Struct_Position* default_instance_;
};
// -------------------------------------------------------------------

class MessageHead : public IMessage /* @@protoc_insertion_point(class_definition:Model.MessageHead) */ {
 public:
  MessageHead();
  virtual ~MessageHead();

  MessageHead(const MessageHead& from);

  inline MessageHead& operator=(const MessageHead& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageHead& default_instance();

  void Swap(MessageHead* other);

  // implements Message ----------------------------------------------

  inline MessageHead* New() const { return New(NULL); }

  MessageHead* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual uint16_t GetOpcode()const override {return DemoMsgOpcode::MessageHead;}
  virtual Type GetType()const override {return typeof(MessageHead);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IMessage;}
  void CopyFrom(const MessageHead& from);
  void MergeFrom(const MessageHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // optional int32 Error = 91;
  void clear_error();
  static const int kErrorFieldNumber = 91;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // optional string Message = 92;
  void clear_message();
  static const int kMessageFieldNumber = 92;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional int64 ActorId = 93;
  void clear_actorid();
  static const int kActorIdFieldNumber = 93;
  ::google::protobuf::int64 actorid() const;
  void set_actorid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Model.MessageHead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::int32 error_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int64 actorid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_DemoMsg_2eproto();
  friend void protobuf_AssignDesc_DemoMsg_2eproto();
  friend void protobuf_ShutdownFile_DemoMsg_2eproto();

  void InitAsDefaultInstance();
  static MessageHead* default_instance_;
};
// -------------------------------------------------------------------

class ActorLocationTestRequest : public IActorLocationRequest /* @@protoc_insertion_point(class_definition:Model.ActorLocationTestRequest) */ {
 public:
  ActorLocationTestRequest();
  virtual ~ActorLocationTestRequest();

  ActorLocationTestRequest(const ActorLocationTestRequest& from);

  inline ActorLocationTestRequest& operator=(const ActorLocationTestRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorLocationTestRequest& default_instance();

  void Swap(ActorLocationTestRequest* other);

  // implements Message ----------------------------------------------

  inline ActorLocationTestRequest* New() const { return New(NULL); }

  ActorLocationTestRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return DemoMsgOpcode::ActorLocationTestRequest;}
  virtual Type GetType()const override {return typeof(ActorLocationTestRequest);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IActorLocationRequest;}
  void CopyFrom(const ActorLocationTestRequest& from);
  void MergeFrom(const ActorLocationTestRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActorLocationTestRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 A = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // optional int32 B = 2;
  void clear_b();
  static const int kBFieldNumber = 2;
  ::google::protobuf::int32 b() const;
  void set_b(::google::protobuf::int32 value);

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Model.ActorLocationTestRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 a_;
  ::google::protobuf::int32 b_;
  ::google::protobuf::int32 rpcid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_DemoMsg_2eproto();
  friend void protobuf_AssignDesc_DemoMsg_2eproto();
  friend void protobuf_ShutdownFile_DemoMsg_2eproto();

  void InitAsDefaultInstance();
  static ActorLocationTestRequest* default_instance_;
};
// -------------------------------------------------------------------

class ActorLocationTestResponse : public IActorLocationResponse /* @@protoc_insertion_point(class_definition:Model.ActorLocationTestResponse) */ {
 public:
  ActorLocationTestResponse();
  virtual ~ActorLocationTestResponse();

  ActorLocationTestResponse(const ActorLocationTestResponse& from);

  inline ActorLocationTestResponse& operator=(const ActorLocationTestResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorLocationTestResponse& default_instance();

  void Swap(ActorLocationTestResponse* other);

  // implements Message ----------------------------------------------

  inline ActorLocationTestResponse* New() const { return New(NULL); }

  ActorLocationTestResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetError()const override {return error();}
  virtual void SetError(const int32_t val)override { set_error(val);}
  virtual const ::std::string& GetMessage()const override {return message();}
  virtual void SetMessage(const ::std::string& val)override { set_message(val);}
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return DemoMsgOpcode::ActorLocationTestResponse;}
  virtual Type GetType()const override {return typeof(ActorLocationTestResponse);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IActorLocationResponse;}
  void CopyFrom(const ActorLocationTestResponse& from);
  void MergeFrom(const ActorLocationTestResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActorLocationTestResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Sum = 1;
  void clear_sum();
  static const int kSumFieldNumber = 1;
  ::google::protobuf::int32 sum() const;
  void set_sum(::google::protobuf::int32 value);

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // optional int32 Error = 91;
  void clear_error();
  static const int kErrorFieldNumber = 91;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // optional string Message = 92;
  void clear_message();
  static const int kMessageFieldNumber = 92;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:Model.ActorLocationTestResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 sum_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_DemoMsg_2eproto();
  friend void protobuf_AssignDesc_DemoMsg_2eproto();
  friend void protobuf_ShutdownFile_DemoMsg_2eproto();

  void InitAsDefaultInstance();
  static ActorLocationTestResponse* default_instance_;
};
// -------------------------------------------------------------------

class ActorLocationMessageTest : public IActorLocationMessage /* @@protoc_insertion_point(class_definition:Model.ActorLocationMessageTest) */ {
 public:
  ActorLocationMessageTest();
  virtual ~ActorLocationMessageTest();

  ActorLocationMessageTest(const ActorLocationMessageTest& from);

  inline ActorLocationMessageTest& operator=(const ActorLocationMessageTest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorLocationMessageTest& default_instance();

  void Swap(ActorLocationMessageTest* other);

  // implements Message ----------------------------------------------

  inline ActorLocationMessageTest* New() const { return New(NULL); }

  ActorLocationMessageTest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return DemoMsgOpcode::ActorLocationMessageTest;}
  virtual Type GetType()const override {return typeof(ActorLocationMessageTest);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IActorLocationMessage;}
  void CopyFrom(const ActorLocationMessageTest& from);
  void MergeFrom(const ActorLocationMessageTest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActorLocationMessageTest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string test_ctx = 1;
  void clear_test_ctx();
  static const int kTestCtxFieldNumber = 1;
  const ::std::string& test_ctx() const;
  void set_test_ctx(const ::std::string& value);
  void set_test_ctx(const char* value);
  void set_test_ctx(const char* value, size_t size);
  ::std::string* mutable_test_ctx();
  ::std::string* release_test_ctx();
  void set_allocated_test_ctx(::std::string* test_ctx);

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Model.ActorLocationMessageTest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr test_ctx_;
  ::google::protobuf::int32 rpcid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_DemoMsg_2eproto();
  friend void protobuf_AssignDesc_DemoMsg_2eproto();
  friend void protobuf_ShutdownFile_DemoMsg_2eproto();

  void InitAsDefaultInstance();
  static ActorLocationMessageTest* default_instance_;
};
// -------------------------------------------------------------------

class ActorTestRequest : public IActorRequest /* @@protoc_insertion_point(class_definition:Model.ActorTestRequest) */ {
 public:
  ActorTestRequest();
  virtual ~ActorTestRequest();

  ActorTestRequest(const ActorTestRequest& from);

  inline ActorTestRequest& operator=(const ActorTestRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorTestRequest& default_instance();

  void Swap(ActorTestRequest* other);

  // implements Message ----------------------------------------------

  inline ActorTestRequest* New() const { return New(NULL); }

  ActorTestRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return DemoMsgOpcode::ActorTestRequest;}
  virtual Type GetType()const override {return typeof(ActorTestRequest);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IActorRequest;}
  void CopyFrom(const ActorTestRequest& from);
  void MergeFrom(const ActorTestRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActorTestRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 A = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // optional int32 B = 2;
  void clear_b();
  static const int kBFieldNumber = 2;
  ::google::protobuf::int32 b() const;
  void set_b(::google::protobuf::int32 value);

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Model.ActorTestRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 a_;
  ::google::protobuf::int32 b_;
  ::google::protobuf::int32 rpcid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_DemoMsg_2eproto();
  friend void protobuf_AssignDesc_DemoMsg_2eproto();
  friend void protobuf_ShutdownFile_DemoMsg_2eproto();

  void InitAsDefaultInstance();
  static ActorTestRequest* default_instance_;
};
// -------------------------------------------------------------------

class ActorTestResponse : public IActorResponse /* @@protoc_insertion_point(class_definition:Model.ActorTestResponse) */ {
 public:
  ActorTestResponse();
  virtual ~ActorTestResponse();

  ActorTestResponse(const ActorTestResponse& from);

  inline ActorTestResponse& operator=(const ActorTestResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorTestResponse& default_instance();

  void Swap(ActorTestResponse* other);

  // implements Message ----------------------------------------------

  inline ActorTestResponse* New() const { return New(NULL); }

  ActorTestResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetError()const override {return error();}
  virtual void SetError(const int32_t val)override { set_error(val);}
  virtual const ::std::string& GetMessage()const override {return message();}
  virtual void SetMessage(const ::std::string& val)override { set_message(val);}
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return DemoMsgOpcode::ActorTestResponse;}
  virtual Type GetType()const override {return typeof(ActorTestResponse);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IActorResponse;}
  void CopyFrom(const ActorTestResponse& from);
  void MergeFrom(const ActorTestResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActorTestResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Sum = 1;
  void clear_sum();
  static const int kSumFieldNumber = 1;
  ::google::protobuf::int32 sum() const;
  void set_sum(::google::protobuf::int32 value);

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // optional int32 Error = 91;
  void clear_error();
  static const int kErrorFieldNumber = 91;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // optional string Message = 92;
  void clear_message();
  static const int kMessageFieldNumber = 92;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:Model.ActorTestResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 sum_;
  ::google::protobuf::int32 rpcid_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_DemoMsg_2eproto();
  friend void protobuf_AssignDesc_DemoMsg_2eproto();
  friend void protobuf_ShutdownFile_DemoMsg_2eproto();

  void InitAsDefaultInstance();
  static ActorTestResponse* default_instance_;
};
// -------------------------------------------------------------------

class ActorMessageTest : public IActorMessage /* @@protoc_insertion_point(class_definition:Model.ActorMessageTest) */ {
 public:
  ActorMessageTest();
  virtual ~ActorMessageTest();

  ActorMessageTest(const ActorMessageTest& from);

  inline ActorMessageTest& operator=(const ActorMessageTest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorMessageTest& default_instance();

  void Swap(ActorMessageTest* other);

  // implements Message ----------------------------------------------

  inline ActorMessageTest* New() const { return New(NULL); }

  ActorMessageTest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  virtual int32_t GetRpcId()const override {return rpcid();}
  virtual void SetRpcId(const int32_t val)override { set_rpcid(val);}
  virtual uint16_t GetOpcode()const override {return DemoMsgOpcode::ActorMessageTest;}
  virtual Type GetType()const override {return typeof(ActorMessageTest);}
  virtual EMessageType GetMessageType()const override {return EMessageType::IActorMessage;}
  void CopyFrom(const ActorMessageTest& from);
  void MergeFrom(const ActorMessageTest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActorMessageTest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 RpcId = 90;
  void clear_rpcid();
  static const int kRpcIdFieldNumber = 90;
  ::google::protobuf::int32 rpcid() const;
  void set_rpcid(::google::protobuf::int32 value);

  // optional string msg_ctx = 1;
  void clear_msg_ctx();
  static const int kMsgCtxFieldNumber = 1;
  const ::std::string& msg_ctx() const;
  void set_msg_ctx(const ::std::string& value);
  void set_msg_ctx(const char* value);
  void set_msg_ctx(const char* value, size_t size);
  ::std::string* mutable_msg_ctx();
  ::std::string* release_msg_ctx();
  void set_allocated_msg_ctx(::std::string* msg_ctx);

  // @@protoc_insertion_point(class_scope:Model.ActorMessageTest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr msg_ctx_;
  ::google::protobuf::int32 rpcid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_DemoMsg_2eproto();
  friend void protobuf_AssignDesc_DemoMsg_2eproto();
  friend void protobuf_ShutdownFile_DemoMsg_2eproto();

  void InitAsDefaultInstance();
  static ActorMessageTest* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Struct_Position

// optional int32 x = 1;
inline void Struct_Position::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 Struct_Position::x() const {
  // @@protoc_insertion_point(field_get:Model.Struct_Position.x)
  return x_;
}
inline void Struct_Position::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Model.Struct_Position.x)
}

// optional int32 y = 2;
inline void Struct_Position::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 Struct_Position::y() const {
  // @@protoc_insertion_point(field_get:Model.Struct_Position.y)
  return y_;
}
inline void Struct_Position::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Model.Struct_Position.y)
}

// -------------------------------------------------------------------

// MessageHead

// optional int32 RpcId = 90;
inline void MessageHead::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 MessageHead::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.MessageHead.RpcId)
  return rpcid_;
}
inline void MessageHead::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.MessageHead.RpcId)
}

// optional int32 Error = 91;
inline void MessageHead::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 MessageHead::error() const {
  // @@protoc_insertion_point(field_get:Model.MessageHead.Error)
  return error_;
}
inline void MessageHead::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:Model.MessageHead.Error)
}

// optional string Message = 92;
inline void MessageHead::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MessageHead::message() const {
  // @@protoc_insertion_point(field_get:Model.MessageHead.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageHead::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Model.MessageHead.Message)
}
inline void MessageHead::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Model.MessageHead.Message)
}
inline void MessageHead::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Model.MessageHead.Message)
}
inline ::std::string* MessageHead::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:Model.MessageHead.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageHead::release_message() {
  // @@protoc_insertion_point(field_release:Model.MessageHead.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageHead::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Model.MessageHead.Message)
}

// optional int64 ActorId = 93;
inline void MessageHead::clear_actorid() {
  actorid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MessageHead::actorid() const {
  // @@protoc_insertion_point(field_get:Model.MessageHead.ActorId)
  return actorid_;
}
inline void MessageHead::set_actorid(::google::protobuf::int64 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:Model.MessageHead.ActorId)
}

// -------------------------------------------------------------------

// ActorLocationTestRequest

// optional int32 A = 1;
inline void ActorLocationTestRequest::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 ActorLocationTestRequest::a() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestRequest.A)
  return a_;
}
inline void ActorLocationTestRequest::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestRequest.A)
}

// optional int32 B = 2;
inline void ActorLocationTestRequest::clear_b() {
  b_ = 0;
}
inline ::google::protobuf::int32 ActorLocationTestRequest::b() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestRequest.B)
  return b_;
}
inline void ActorLocationTestRequest::set_b(::google::protobuf::int32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestRequest.B)
}

// optional int32 RpcId = 90;
inline void ActorLocationTestRequest::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 ActorLocationTestRequest::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestRequest.RpcId)
  return rpcid_;
}
inline void ActorLocationTestRequest::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestRequest.RpcId)
}

// -------------------------------------------------------------------

// ActorLocationTestResponse

// optional int32 Sum = 1;
inline void ActorLocationTestResponse::clear_sum() {
  sum_ = 0;
}
inline ::google::protobuf::int32 ActorLocationTestResponse::sum() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestResponse.Sum)
  return sum_;
}
inline void ActorLocationTestResponse::set_sum(::google::protobuf::int32 value) {
  
  sum_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestResponse.Sum)
}

// optional int32 RpcId = 90;
inline void ActorLocationTestResponse::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 ActorLocationTestResponse::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestResponse.RpcId)
  return rpcid_;
}
inline void ActorLocationTestResponse::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestResponse.RpcId)
}

// optional int32 Error = 91;
inline void ActorLocationTestResponse::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 ActorLocationTestResponse::error() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestResponse.Error)
  return error_;
}
inline void ActorLocationTestResponse::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestResponse.Error)
}

// optional string Message = 92;
inline void ActorLocationTestResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActorLocationTestResponse::message() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationTestResponse.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActorLocationTestResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Model.ActorLocationTestResponse.Message)
}
inline void ActorLocationTestResponse::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Model.ActorLocationTestResponse.Message)
}
inline void ActorLocationTestResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Model.ActorLocationTestResponse.Message)
}
inline ::std::string* ActorLocationTestResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:Model.ActorLocationTestResponse.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActorLocationTestResponse::release_message() {
  // @@protoc_insertion_point(field_release:Model.ActorLocationTestResponse.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActorLocationTestResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Model.ActorLocationTestResponse.Message)
}

// -------------------------------------------------------------------

// ActorLocationMessageTest

// optional string test_ctx = 1;
inline void ActorLocationMessageTest::clear_test_ctx() {
  test_ctx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActorLocationMessageTest::test_ctx() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationMessageTest.test_ctx)
  return test_ctx_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActorLocationMessageTest::set_test_ctx(const ::std::string& value) {
  
  test_ctx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Model.ActorLocationMessageTest.test_ctx)
}
inline void ActorLocationMessageTest::set_test_ctx(const char* value) {
  
  test_ctx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Model.ActorLocationMessageTest.test_ctx)
}
inline void ActorLocationMessageTest::set_test_ctx(const char* value, size_t size) {
  
  test_ctx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Model.ActorLocationMessageTest.test_ctx)
}
inline ::std::string* ActorLocationMessageTest::mutable_test_ctx() {
  
  // @@protoc_insertion_point(field_mutable:Model.ActorLocationMessageTest.test_ctx)
  return test_ctx_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActorLocationMessageTest::release_test_ctx() {
  // @@protoc_insertion_point(field_release:Model.ActorLocationMessageTest.test_ctx)
  
  return test_ctx_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActorLocationMessageTest::set_allocated_test_ctx(::std::string* test_ctx) {
  if (test_ctx != NULL) {
    
  } else {
    
  }
  test_ctx_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), test_ctx);
  // @@protoc_insertion_point(field_set_allocated:Model.ActorLocationMessageTest.test_ctx)
}

// optional int32 RpcId = 90;
inline void ActorLocationMessageTest::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 ActorLocationMessageTest::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.ActorLocationMessageTest.RpcId)
  return rpcid_;
}
inline void ActorLocationMessageTest::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorLocationMessageTest.RpcId)
}

// -------------------------------------------------------------------

// ActorTestRequest

// optional int32 A = 1;
inline void ActorTestRequest::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 ActorTestRequest::a() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestRequest.A)
  return a_;
}
inline void ActorTestRequest::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorTestRequest.A)
}

// optional int32 B = 2;
inline void ActorTestRequest::clear_b() {
  b_ = 0;
}
inline ::google::protobuf::int32 ActorTestRequest::b() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestRequest.B)
  return b_;
}
inline void ActorTestRequest::set_b(::google::protobuf::int32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorTestRequest.B)
}

// optional int32 RpcId = 90;
inline void ActorTestRequest::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 ActorTestRequest::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestRequest.RpcId)
  return rpcid_;
}
inline void ActorTestRequest::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorTestRequest.RpcId)
}

// -------------------------------------------------------------------

// ActorTestResponse

// optional int32 Sum = 1;
inline void ActorTestResponse::clear_sum() {
  sum_ = 0;
}
inline ::google::protobuf::int32 ActorTestResponse::sum() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestResponse.Sum)
  return sum_;
}
inline void ActorTestResponse::set_sum(::google::protobuf::int32 value) {
  
  sum_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorTestResponse.Sum)
}

// optional int32 RpcId = 90;
inline void ActorTestResponse::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 ActorTestResponse::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestResponse.RpcId)
  return rpcid_;
}
inline void ActorTestResponse::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorTestResponse.RpcId)
}

// optional int32 Error = 91;
inline void ActorTestResponse::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 ActorTestResponse::error() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestResponse.Error)
  return error_;
}
inline void ActorTestResponse::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorTestResponse.Error)
}

// optional string Message = 92;
inline void ActorTestResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActorTestResponse::message() const {
  // @@protoc_insertion_point(field_get:Model.ActorTestResponse.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActorTestResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Model.ActorTestResponse.Message)
}
inline void ActorTestResponse::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Model.ActorTestResponse.Message)
}
inline void ActorTestResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Model.ActorTestResponse.Message)
}
inline ::std::string* ActorTestResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:Model.ActorTestResponse.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActorTestResponse::release_message() {
  // @@protoc_insertion_point(field_release:Model.ActorTestResponse.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActorTestResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Model.ActorTestResponse.Message)
}

// -------------------------------------------------------------------

// ActorMessageTest

// optional int32 RpcId = 90;
inline void ActorMessageTest::clear_rpcid() {
  rpcid_ = 0;
}
inline ::google::protobuf::int32 ActorMessageTest::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.ActorMessageTest.RpcId)
  return rpcid_;
}
inline void ActorMessageTest::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.ActorMessageTest.RpcId)
}

// optional string msg_ctx = 1;
inline void ActorMessageTest::clear_msg_ctx() {
  msg_ctx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActorMessageTest::msg_ctx() const {
  // @@protoc_insertion_point(field_get:Model.ActorMessageTest.msg_ctx)
  return msg_ctx_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActorMessageTest::set_msg_ctx(const ::std::string& value) {
  
  msg_ctx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Model.ActorMessageTest.msg_ctx)
}
inline void ActorMessageTest::set_msg_ctx(const char* value) {
  
  msg_ctx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Model.ActorMessageTest.msg_ctx)
}
inline void ActorMessageTest::set_msg_ctx(const char* value, size_t size) {
  
  msg_ctx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Model.ActorMessageTest.msg_ctx)
}
inline ::std::string* ActorMessageTest::mutable_msg_ctx() {
  
  // @@protoc_insertion_point(field_mutable:Model.ActorMessageTest.msg_ctx)
  return msg_ctx_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActorMessageTest::release_msg_ctx() {
  // @@protoc_insertion_point(field_release:Model.ActorMessageTest.msg_ctx)
  
  return msg_ctx_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActorMessageTest::set_allocated_msg_ctx(::std::string* msg_ctx) {
  if (msg_ctx != NULL) {
    
  } else {
    
  }
  msg_ctx_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_ctx);
  // @@protoc_insertion_point(field_set_allocated:Model.ActorMessageTest.msg_ctx)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Model

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DemoMsg_2eproto__INCLUDED
