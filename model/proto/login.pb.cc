// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Login.pb.h"

#include <algorithm>

#include "etc/etc.h"
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace login {
// Reflection all message types.
REF(Login_RegisterEmail_Request_20010,ProtoMessage);
REF(Login_RegisterEmail_Response_20011,ProtoMessage);
REF(Login_AccountLogin_Request_20020,ProtoMessage);
REF(Login_AccountLogin_Response_20021,ProtoMessage);
REF(Login_WechatLogin_Request_20022,ProtoMessage);
REF(Login_WechatLogin_Response_20023,ProtoMessage);
REF(Login_keyLogin_Request_20024,ProtoMessage);
REF(Login_keyLogin_Response_20025,ProtoMessage);
REF(Login_HeartBeat_Request_30,ProtoMessage);
// Reflection self the response message type.
REF(Login_RegisterEmail_Request_20010,ProtoResponseMessage(typeof(Login_RegisterEmail_Response_20011)));
REF(Login_AccountLogin_Request_20020,ProtoResponseMessage(typeof(Login_AccountLogin_Response_20021)));
REF(Login_WechatLogin_Request_20022,ProtoResponseMessage(typeof(Login_WechatLogin_Response_20023)));
REF(Login_keyLogin_Request_20024,ProtoResponseMessage(typeof(Login_keyLogin_Response_20025)));

namespace {

const ::google::protobuf::Descriptor* Login_RegisterEmail_Request_20010_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_RegisterEmail_Request_20010_reflection_ = NULL;
const ::google::protobuf::Descriptor* Login_RegisterEmail_Response_20011_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_RegisterEmail_Response_20011_reflection_ = NULL;
const ::google::protobuf::Descriptor* Login_AccountLogin_Request_20020_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_AccountLogin_Request_20020_reflection_ = NULL;
const ::google::protobuf::Descriptor* Login_AccountLogin_Response_20021_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_AccountLogin_Response_20021_reflection_ = NULL;
const ::google::protobuf::Descriptor* Login_WechatLogin_Request_20022_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_WechatLogin_Request_20022_reflection_ = NULL;
const ::google::protobuf::Descriptor* Login_WechatLogin_Response_20023_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_WechatLogin_Response_20023_reflection_ = NULL;
const ::google::protobuf::Descriptor* Login_keyLogin_Request_20024_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_keyLogin_Request_20024_reflection_ = NULL;
const ::google::protobuf::Descriptor* Login_keyLogin_Response_20025_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_keyLogin_Response_20025_reflection_ = NULL;
const ::google::protobuf::Descriptor* Login_HeartBeat_Request_30_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_HeartBeat_Request_30_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Login_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Login_2eproto() {
  protobuf_AddDesc_Login_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Login.proto");
  GOOGLE_CHECK(file != NULL);
  Login_RegisterEmail_Request_20010_descriptor_ = file->message_type(0);
  static const int Login_RegisterEmail_Request_20010_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_RegisterEmail_Request_20010, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_RegisterEmail_Request_20010, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_RegisterEmail_Request_20010, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_RegisterEmail_Request_20010, rpcid_),
  };
  Login_RegisterEmail_Request_20010_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Login_RegisterEmail_Request_20010_descriptor_,
      Login_RegisterEmail_Request_20010::default_instance_,
      Login_RegisterEmail_Request_20010_offsets_,
      -1,
      -1,
      -1,
      sizeof(Login_RegisterEmail_Request_20010),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_RegisterEmail_Request_20010, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_RegisterEmail_Request_20010, _is_default_instance_));
  Login_RegisterEmail_Response_20011_descriptor_ = file->message_type(1);
  static const int Login_RegisterEmail_Response_20011_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_RegisterEmail_Response_20011, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_RegisterEmail_Response_20011, rpcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_RegisterEmail_Response_20011, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_RegisterEmail_Response_20011, error_),
  };
  Login_RegisterEmail_Response_20011_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Login_RegisterEmail_Response_20011_descriptor_,
      Login_RegisterEmail_Response_20011::default_instance_,
      Login_RegisterEmail_Response_20011_offsets_,
      -1,
      -1,
      -1,
      sizeof(Login_RegisterEmail_Response_20011),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_RegisterEmail_Response_20011, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_RegisterEmail_Response_20011, _is_default_instance_));
  Login_AccountLogin_Request_20020_descriptor_ = file->message_type(2);
  static const int Login_AccountLogin_Request_20020_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Request_20020, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Request_20020, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Request_20020, rpcid_),
  };
  Login_AccountLogin_Request_20020_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Login_AccountLogin_Request_20020_descriptor_,
      Login_AccountLogin_Request_20020::default_instance_,
      Login_AccountLogin_Request_20020_offsets_,
      -1,
      -1,
      -1,
      sizeof(Login_AccountLogin_Request_20020),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Request_20020, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Request_20020, _is_default_instance_));
  Login_AccountLogin_Response_20021_descriptor_ = file->message_type(3);
  static const int Login_AccountLogin_Response_20021_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Response_20021, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Response_20021, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Response_20021, serverip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Response_20021, serverport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Response_20021, listserverip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Response_20021, listserverport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Response_20021, bantotime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Response_20021, bancontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Response_20021, rpcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Response_20021, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Response_20021, error_),
  };
  Login_AccountLogin_Response_20021_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Login_AccountLogin_Response_20021_descriptor_,
      Login_AccountLogin_Response_20021::default_instance_,
      Login_AccountLogin_Response_20021_offsets_,
      -1,
      -1,
      -1,
      sizeof(Login_AccountLogin_Response_20021),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Response_20021, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_AccountLogin_Response_20021, _is_default_instance_));
  Login_WechatLogin_Request_20022_descriptor_ = file->message_type(4);
  static const int Login_WechatLogin_Request_20022_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Request_20022, wxcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Request_20022, rpcid_),
  };
  Login_WechatLogin_Request_20022_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Login_WechatLogin_Request_20022_descriptor_,
      Login_WechatLogin_Request_20022::default_instance_,
      Login_WechatLogin_Request_20022_offsets_,
      -1,
      -1,
      -1,
      sizeof(Login_WechatLogin_Request_20022),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Request_20022, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Request_20022, _is_default_instance_));
  Login_WechatLogin_Response_20023_descriptor_ = file->message_type(5);
  static const int Login_WechatLogin_Response_20023_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Response_20023, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Response_20023, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Response_20023, serverip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Response_20023, serverport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Response_20023, listserverip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Response_20023, listserverport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Response_20023, bantotime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Response_20023, bancontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Response_20023, rpcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Response_20023, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Response_20023, error_),
  };
  Login_WechatLogin_Response_20023_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Login_WechatLogin_Response_20023_descriptor_,
      Login_WechatLogin_Response_20023::default_instance_,
      Login_WechatLogin_Response_20023_offsets_,
      -1,
      -1,
      -1,
      sizeof(Login_WechatLogin_Response_20023),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Response_20023, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_WechatLogin_Response_20023, _is_default_instance_));
  Login_keyLogin_Request_20024_descriptor_ = file->message_type(6);
  static const int Login_keyLogin_Request_20024_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_keyLogin_Request_20024, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_keyLogin_Request_20024, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_keyLogin_Request_20024, rpcid_),
  };
  Login_keyLogin_Request_20024_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Login_keyLogin_Request_20024_descriptor_,
      Login_keyLogin_Request_20024::default_instance_,
      Login_keyLogin_Request_20024_offsets_,
      -1,
      -1,
      -1,
      sizeof(Login_keyLogin_Request_20024),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_keyLogin_Request_20024, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_keyLogin_Request_20024, _is_default_instance_));
  Login_keyLogin_Response_20025_descriptor_ = file->message_type(7);
  static const int Login_keyLogin_Response_20025_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_keyLogin_Response_20025, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_keyLogin_Response_20025, rpcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_keyLogin_Response_20025, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_keyLogin_Response_20025, error_),
  };
  Login_keyLogin_Response_20025_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Login_keyLogin_Response_20025_descriptor_,
      Login_keyLogin_Response_20025::default_instance_,
      Login_keyLogin_Response_20025_offsets_,
      -1,
      -1,
      -1,
      sizeof(Login_keyLogin_Response_20025),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_keyLogin_Response_20025, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_keyLogin_Response_20025, _is_default_instance_));
  Login_HeartBeat_Request_30_descriptor_ = file->message_type(8);
  static const int Login_HeartBeat_Request_30_offsets_[1] = {
  };
  Login_HeartBeat_Request_30_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Login_HeartBeat_Request_30_descriptor_,
      Login_HeartBeat_Request_30::default_instance_,
      Login_HeartBeat_Request_30_offsets_,
      -1,
      -1,
      -1,
      sizeof(Login_HeartBeat_Request_30),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_HeartBeat_Request_30, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_HeartBeat_Request_30, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Login_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Login_RegisterEmail_Request_20010_descriptor_, &Login_RegisterEmail_Request_20010::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Login_RegisterEmail_Response_20011_descriptor_, &Login_RegisterEmail_Response_20011::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Login_AccountLogin_Request_20020_descriptor_, &Login_AccountLogin_Request_20020::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Login_AccountLogin_Response_20021_descriptor_, &Login_AccountLogin_Response_20021::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Login_WechatLogin_Request_20022_descriptor_, &Login_WechatLogin_Request_20022::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Login_WechatLogin_Response_20023_descriptor_, &Login_WechatLogin_Response_20023::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Login_keyLogin_Request_20024_descriptor_, &Login_keyLogin_Request_20024::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Login_keyLogin_Response_20025_descriptor_, &Login_keyLogin_Response_20025::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Login_HeartBeat_Request_30_descriptor_, &Login_HeartBeat_Request_30::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Login_2eproto() {
  delete Login_RegisterEmail_Request_20010::default_instance_;
  delete Login_RegisterEmail_Request_20010_reflection_;
  delete Login_RegisterEmail_Response_20011::default_instance_;
  delete Login_RegisterEmail_Response_20011_reflection_;
  delete Login_AccountLogin_Request_20020::default_instance_;
  delete Login_AccountLogin_Request_20020_reflection_;
  delete Login_AccountLogin_Response_20021::default_instance_;
  delete Login_AccountLogin_Response_20021_reflection_;
  delete Login_WechatLogin_Request_20022::default_instance_;
  delete Login_WechatLogin_Request_20022_reflection_;
  delete Login_WechatLogin_Response_20023::default_instance_;
  delete Login_WechatLogin_Response_20023_reflection_;
  delete Login_keyLogin_Request_20024::default_instance_;
  delete Login_keyLogin_Request_20024_reflection_;
  delete Login_keyLogin_Response_20025::default_instance_;
  delete Login_keyLogin_Response_20025_reflection_;
  delete Login_HeartBeat_Request_30::default_instance_;
  delete Login_HeartBeat_Request_30_reflection_;
}

void protobuf_AddDesc_Login_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_Login_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013Login.proto\022\005login\"a\n!Login_RegisterEm"
    "ail_Request_20010\022\014\n\004Name\030\001 \001(\t\022\r\n\005Email"
    "\030\002 \001(\t\022\020\n\010Password\030\003 \001(\t\022\r\n\005RpcId\030Z \001(\005\""
    "f\n\"Login_RegisterEmail_Response_20011\022\021\n"
    "\tAccountId\030\002 \001(\003\022\r\n\005RpcId\030Z \001(\005\022\017\n\007Messa"
    "ge\030[ \001(\t\022\r\n\005Error\030\\ \001(\005\"T\n Login_Account"
    "Login_Request_20020\022\017\n\007Account\030\001 \001(\t\022\020\n\010"
    "Password\030\002 \001(\t\022\r\n\005RpcId\030Z \001(\005\"\355\001\n!Login_"
    "AccountLogin_Response_20021\022\021\n\tAccountId"
    "\030\002 \001(\003\022\013\n\003Key\030\003 \001(\t\022\020\n\010ServerIp\030\004 \001(\t\022\022\n"
    "\nServerPort\030\005 \001(\005\022\024\n\014ListServerIp\030\006 \001(\t\022"
    "\026\n\016ListServerPort\030\007 \001(\005\022\021\n\tBanToTime\030\n \001"
    "(\003\022\022\n\nBanContent\030\013 \001(\t\022\r\n\005RpcId\030Z \001(\005\022\017\n"
    "\007Message\030[ \001(\t\022\r\n\005Error\030\\ \001(\005\"@\n\037Login_W"
    "echatLogin_Request_20022\022\016\n\006WxCode\030\001 \001(\t"
    "\022\r\n\005RpcId\030Z \001(\005\"\354\001\n Login_WechatLogin_Re"
    "sponse_20023\022\021\n\tAccountId\030\002 \001(\003\022\013\n\003Key\030\003"
    " \001(\t\022\020\n\010ServerIp\030\004 \001(\t\022\022\n\nServerPort\030\005 \001"
    "(\005\022\024\n\014ListServerIp\030\006 \001(\t\022\026\n\016ListServerPo"
    "rt\030\007 \001(\005\022\021\n\tBanToTime\030\n \001(\003\022\022\n\nBanConten"
    "t\030\013 \001(\t\022\r\n\005RpcId\030Z \001(\005\022\017\n\007Message\030[ \001(\t\022"
    "\r\n\005Error\030\\ \001(\005\"M\n\034Login_keyLogin_Request"
    "_20024\022\021\n\tAccountId\030\001 \001(\003\022\013\n\003Key\030\002 \001(\t\022\r"
    "\n\005RpcId\030Z \001(\005\"a\n\035Login_keyLogin_Response"
    "_20025\022\021\n\tSessionID\030\002 \001(\005\022\r\n\005RpcId\030Z \001(\005"
    "\022\017\n\007Message\030[ \001(\t\022\r\n\005Error\030\\ \001(\005\"\034\n\032Logi"
    "n_HeartBeat_Request_30b\006proto3", 1070);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Login.proto", &protobuf_RegisterTypes);
  Login_RegisterEmail_Request_20010::default_instance_ = new Login_RegisterEmail_Request_20010();
  Login_RegisterEmail_Response_20011::default_instance_ = new Login_RegisterEmail_Response_20011();
  Login_AccountLogin_Request_20020::default_instance_ = new Login_AccountLogin_Request_20020();
  Login_AccountLogin_Response_20021::default_instance_ = new Login_AccountLogin_Response_20021();
  Login_WechatLogin_Request_20022::default_instance_ = new Login_WechatLogin_Request_20022();
  Login_WechatLogin_Response_20023::default_instance_ = new Login_WechatLogin_Response_20023();
  Login_keyLogin_Request_20024::default_instance_ = new Login_keyLogin_Request_20024();
  Login_keyLogin_Response_20025::default_instance_ = new Login_keyLogin_Response_20025();
  Login_HeartBeat_Request_30::default_instance_ = new Login_HeartBeat_Request_30();
  Login_RegisterEmail_Request_20010::default_instance_->InitAsDefaultInstance();
  Login_RegisterEmail_Response_20011::default_instance_->InitAsDefaultInstance();
  Login_AccountLogin_Request_20020::default_instance_->InitAsDefaultInstance();
  Login_AccountLogin_Response_20021::default_instance_->InitAsDefaultInstance();
  Login_WechatLogin_Request_20022::default_instance_->InitAsDefaultInstance();
  Login_WechatLogin_Response_20023::default_instance_->InitAsDefaultInstance();
  Login_keyLogin_Request_20024::default_instance_->InitAsDefaultInstance();
  Login_keyLogin_Response_20025::default_instance_->InitAsDefaultInstance();
  Login_HeartBeat_Request_30::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Login_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Login_2eproto {
  StaticDescriptorInitializer_Login_2eproto() {
    protobuf_AddDesc_Login_2eproto();
  }
} static_descriptor_initializer_Login_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login_RegisterEmail_Request_20010::kNameFieldNumber;
const int Login_RegisterEmail_Request_20010::kEmailFieldNumber;
const int Login_RegisterEmail_Request_20010::kPasswordFieldNumber;
const int Login_RegisterEmail_Request_20010::kRpcIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login_RegisterEmail_Request_20010::Login_RegisterEmail_Request_20010()
  : IRequest(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:login.Login_RegisterEmail_Request_20010)
}

void Login_RegisterEmail_Request_20010::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Login_RegisterEmail_Request_20010::Login_RegisterEmail_Request_20010(const Login_RegisterEmail_Request_20010& from)
  : IRequest(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:login.Login_RegisterEmail_Request_20010)
}

void Login_RegisterEmail_Request_20010::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpcid_ = 0;
}

Login_RegisterEmail_Request_20010::~Login_RegisterEmail_Request_20010() {
  // @@protoc_insertion_point(destructor:login.Login_RegisterEmail_Request_20010)
  SharedDtor();
}

void Login_RegisterEmail_Request_20010::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Login_RegisterEmail_Request_20010::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login_RegisterEmail_Request_20010::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_RegisterEmail_Request_20010_descriptor_;
}

const Login_RegisterEmail_Request_20010& Login_RegisterEmail_Request_20010::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Login_2eproto();
  return *default_instance_;
}

Login_RegisterEmail_Request_20010* Login_RegisterEmail_Request_20010::default_instance_ = NULL;

Login_RegisterEmail_Request_20010* Login_RegisterEmail_Request_20010::New(::google::protobuf::Arena* arena) const {
  Login_RegisterEmail_Request_20010* n = new Login_RegisterEmail_Request_20010;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login_RegisterEmail_Request_20010::Clear() {
// @@protoc_insertion_point(message_clear_start:login.Login_RegisterEmail_Request_20010)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpcid_ = 0;
}

bool Login_RegisterEmail_Request_20010::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:login.Login_RegisterEmail_Request_20010)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_RegisterEmail_Request_20010.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Email;
        break;
      }

      // optional string Email = 2;
      case 2: {
        if (tag == 18) {
         parse_Email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_RegisterEmail_Request_20010.Email"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Password;
        break;
      }

      // optional string Password = 3;
      case 3: {
        if (tag == 26) {
         parse_Password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_RegisterEmail_Request_20010.Password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_RpcId;
        break;
      }

      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
         parse_RpcId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:login.Login_RegisterEmail_Request_20010)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:login.Login_RegisterEmail_Request_20010)
  return false;
#undef DO_
}

void Login_RegisterEmail_Request_20010::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:login.Login_RegisterEmail_Request_20010)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_RegisterEmail_Request_20010.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string Email = 2;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_RegisterEmail_Request_20010.Email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email(), output);
  }

  // optional string Password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_RegisterEmail_Request_20010.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // @@protoc_insertion_point(serialize_end:login.Login_RegisterEmail_Request_20010)
}

::google::protobuf::uint8* Login_RegisterEmail_Request_20010::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:login.Login_RegisterEmail_Request_20010)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_RegisterEmail_Request_20010.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string Email = 2;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_RegisterEmail_Request_20010.Email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email(), target);
  }

  // optional string Password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_RegisterEmail_Request_20010.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:login.Login_RegisterEmail_Request_20010)
  return target;
}

int Login_RegisterEmail_Request_20010::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:login.Login_RegisterEmail_Request_20010)
  int total_size = 0;

  // optional string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string Email = 2;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // optional string Password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login_RegisterEmail_Request_20010::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:login.Login_RegisterEmail_Request_20010)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Login_RegisterEmail_Request_20010* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Login_RegisterEmail_Request_20010>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:login.Login_RegisterEmail_Request_20010)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:login.Login_RegisterEmail_Request_20010)
    MergeFrom(*source);
  }
}

void Login_RegisterEmail_Request_20010::MergeFrom(const Login_RegisterEmail_Request_20010& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:login.Login_RegisterEmail_Request_20010)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
}

void Login_RegisterEmail_Request_20010::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:login.Login_RegisterEmail_Request_20010)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login_RegisterEmail_Request_20010::CopyFrom(const Login_RegisterEmail_Request_20010& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login.Login_RegisterEmail_Request_20010)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_RegisterEmail_Request_20010::IsInitialized() const {

  return true;
}

void Login_RegisterEmail_Request_20010::Swap(Login_RegisterEmail_Request_20010* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login_RegisterEmail_Request_20010::InternalSwap(Login_RegisterEmail_Request_20010* other) {
  name_.Swap(&other->name_);
  email_.Swap(&other->email_);
  password_.Swap(&other->password_);
  std::swap(rpcid_, other->rpcid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login_RegisterEmail_Request_20010::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_RegisterEmail_Request_20010_descriptor_;
  metadata.reflection = Login_RegisterEmail_Request_20010_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login_RegisterEmail_Request_20010

// optional string Name = 1;
void Login_RegisterEmail_Request_20010::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_RegisterEmail_Request_20010::name() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Request_20010.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_RegisterEmail_Request_20010::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Request_20010.Name)
}
 void Login_RegisterEmail_Request_20010::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_RegisterEmail_Request_20010.Name)
}
 void Login_RegisterEmail_Request_20010::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_RegisterEmail_Request_20010.Name)
}
 ::std::string* Login_RegisterEmail_Request_20010::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_RegisterEmail_Request_20010.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_RegisterEmail_Request_20010::release_name() {
  // @@protoc_insertion_point(field_release:login.Login_RegisterEmail_Request_20010.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_RegisterEmail_Request_20010::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:login.Login_RegisterEmail_Request_20010.Name)
}

// optional string Email = 2;
void Login_RegisterEmail_Request_20010::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_RegisterEmail_Request_20010::email() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Request_20010.Email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_RegisterEmail_Request_20010::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Request_20010.Email)
}
 void Login_RegisterEmail_Request_20010::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_RegisterEmail_Request_20010.Email)
}
 void Login_RegisterEmail_Request_20010::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_RegisterEmail_Request_20010.Email)
}
 ::std::string* Login_RegisterEmail_Request_20010::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_RegisterEmail_Request_20010.Email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_RegisterEmail_Request_20010::release_email() {
  // @@protoc_insertion_point(field_release:login.Login_RegisterEmail_Request_20010.Email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_RegisterEmail_Request_20010::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:login.Login_RegisterEmail_Request_20010.Email)
}

// optional string Password = 3;
void Login_RegisterEmail_Request_20010::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_RegisterEmail_Request_20010::password() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Request_20010.Password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_RegisterEmail_Request_20010::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Request_20010.Password)
}
 void Login_RegisterEmail_Request_20010::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_RegisterEmail_Request_20010.Password)
}
 void Login_RegisterEmail_Request_20010::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_RegisterEmail_Request_20010.Password)
}
 ::std::string* Login_RegisterEmail_Request_20010::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_RegisterEmail_Request_20010.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_RegisterEmail_Request_20010::release_password() {
  // @@protoc_insertion_point(field_release:login.Login_RegisterEmail_Request_20010.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_RegisterEmail_Request_20010::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:login.Login_RegisterEmail_Request_20010.Password)
}

// optional int32 RpcId = 90;
void Login_RegisterEmail_Request_20010::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 Login_RegisterEmail_Request_20010::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Request_20010.RpcId)
  return rpcid_;
}
 void Login_RegisterEmail_Request_20010::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Request_20010.RpcId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login_RegisterEmail_Response_20011::kAccountIdFieldNumber;
const int Login_RegisterEmail_Response_20011::kRpcIdFieldNumber;
const int Login_RegisterEmail_Response_20011::kMessageFieldNumber;
const int Login_RegisterEmail_Response_20011::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login_RegisterEmail_Response_20011::Login_RegisterEmail_Response_20011()
  : IResponse(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:login.Login_RegisterEmail_Response_20011)
}

void Login_RegisterEmail_Response_20011::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Login_RegisterEmail_Response_20011::Login_RegisterEmail_Response_20011(const Login_RegisterEmail_Response_20011& from)
  : IResponse(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:login.Login_RegisterEmail_Response_20011)
}

void Login_RegisterEmail_Response_20011::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accountid_ = GOOGLE_LONGLONG(0);
  rpcid_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

Login_RegisterEmail_Response_20011::~Login_RegisterEmail_Response_20011() {
  // @@protoc_insertion_point(destructor:login.Login_RegisterEmail_Response_20011)
  SharedDtor();
}

void Login_RegisterEmail_Response_20011::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Login_RegisterEmail_Response_20011::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login_RegisterEmail_Response_20011::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_RegisterEmail_Response_20011_descriptor_;
}

const Login_RegisterEmail_Response_20011& Login_RegisterEmail_Response_20011::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Login_2eproto();
  return *default_instance_;
}

Login_RegisterEmail_Response_20011* Login_RegisterEmail_Response_20011::default_instance_ = NULL;

Login_RegisterEmail_Response_20011* Login_RegisterEmail_Response_20011::New(::google::protobuf::Arena* arena) const {
  Login_RegisterEmail_Response_20011* n = new Login_RegisterEmail_Response_20011;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login_RegisterEmail_Response_20011::Clear() {
// @@protoc_insertion_point(message_clear_start:login.Login_RegisterEmail_Response_20011)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Login_RegisterEmail_Response_20011, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Login_RegisterEmail_Response_20011*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rpcid_, error_);
  accountid_ = GOOGLE_LONGLONG(0);
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Login_RegisterEmail_Response_20011::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:login.Login_RegisterEmail_Response_20011)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 AccountId = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_RpcId;
        break;
      }

      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
         parse_RpcId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(730)) goto parse_Message;
        break;
      }

      // optional string Message = 91;
      case 91: {
        if (tag == 730) {
         parse_Message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_RegisterEmail_Response_20011.Message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(736)) goto parse_Error;
        break;
      }

      // optional int32 Error = 92;
      case 92: {
        if (tag == 736) {
         parse_Error:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:login.Login_RegisterEmail_Response_20011)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:login.Login_RegisterEmail_Response_20011)
  return false;
#undef DO_
}

void Login_RegisterEmail_Response_20011::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:login.Login_RegisterEmail_Response_20011)
  // optional int64 AccountId = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->accountid(), output);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // optional string Message = 91;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_RegisterEmail_Response_20011.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      91, this->message(), output);
  }

  // optional int32 Error = 92;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(92, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:login.Login_RegisterEmail_Response_20011)
}

::google::protobuf::uint8* Login_RegisterEmail_Response_20011::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:login.Login_RegisterEmail_Response_20011)
  // optional int64 AccountId = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->accountid(), target);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // optional string Message = 91;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_RegisterEmail_Response_20011.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        91, this->message(), target);
  }

  // optional int32 Error = 92;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(92, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:login.Login_RegisterEmail_Response_20011)
  return target;
}

int Login_RegisterEmail_Response_20011::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:login.Login_RegisterEmail_Response_20011)
  int total_size = 0;

  // optional int64 AccountId = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  // optional string Message = 91;
  if (this->message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional int32 Error = 92;
  if (this->error() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login_RegisterEmail_Response_20011::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:login.Login_RegisterEmail_Response_20011)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Login_RegisterEmail_Response_20011* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Login_RegisterEmail_Response_20011>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:login.Login_RegisterEmail_Response_20011)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:login.Login_RegisterEmail_Response_20011)
    MergeFrom(*source);
  }
}

void Login_RegisterEmail_Response_20011::MergeFrom(const Login_RegisterEmail_Response_20011& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:login.Login_RegisterEmail_Response_20011)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void Login_RegisterEmail_Response_20011::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:login.Login_RegisterEmail_Response_20011)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login_RegisterEmail_Response_20011::CopyFrom(const Login_RegisterEmail_Response_20011& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login.Login_RegisterEmail_Response_20011)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_RegisterEmail_Response_20011::IsInitialized() const {

  return true;
}

void Login_RegisterEmail_Response_20011::Swap(Login_RegisterEmail_Response_20011* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login_RegisterEmail_Response_20011::InternalSwap(Login_RegisterEmail_Response_20011* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(rpcid_, other->rpcid_);
  message_.Swap(&other->message_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login_RegisterEmail_Response_20011::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_RegisterEmail_Response_20011_descriptor_;
  metadata.reflection = Login_RegisterEmail_Response_20011_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login_RegisterEmail_Response_20011

// optional int64 AccountId = 2;
void Login_RegisterEmail_Response_20011::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Login_RegisterEmail_Response_20011::accountid() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Response_20011.AccountId)
  return accountid_;
}
 void Login_RegisterEmail_Response_20011::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Response_20011.AccountId)
}

// optional int32 RpcId = 90;
void Login_RegisterEmail_Response_20011::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 Login_RegisterEmail_Response_20011::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Response_20011.RpcId)
  return rpcid_;
}
 void Login_RegisterEmail_Response_20011::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Response_20011.RpcId)
}

// optional string Message = 91;
void Login_RegisterEmail_Response_20011::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_RegisterEmail_Response_20011::message() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Response_20011.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_RegisterEmail_Response_20011::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Response_20011.Message)
}
 void Login_RegisterEmail_Response_20011::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_RegisterEmail_Response_20011.Message)
}
 void Login_RegisterEmail_Response_20011::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_RegisterEmail_Response_20011.Message)
}
 ::std::string* Login_RegisterEmail_Response_20011::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_RegisterEmail_Response_20011.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_RegisterEmail_Response_20011::release_message() {
  // @@protoc_insertion_point(field_release:login.Login_RegisterEmail_Response_20011.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_RegisterEmail_Response_20011::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:login.Login_RegisterEmail_Response_20011.Message)
}

// optional int32 Error = 92;
void Login_RegisterEmail_Response_20011::clear_error() {
  error_ = 0;
}
 ::google::protobuf::int32 Login_RegisterEmail_Response_20011::error() const {
  // @@protoc_insertion_point(field_get:login.Login_RegisterEmail_Response_20011.Error)
  return error_;
}
 void Login_RegisterEmail_Response_20011::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:login.Login_RegisterEmail_Response_20011.Error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login_AccountLogin_Request_20020::kAccountFieldNumber;
const int Login_AccountLogin_Request_20020::kPasswordFieldNumber;
const int Login_AccountLogin_Request_20020::kRpcIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login_AccountLogin_Request_20020::Login_AccountLogin_Request_20020()
  : IRequest(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:login.Login_AccountLogin_Request_20020)
}

void Login_AccountLogin_Request_20020::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Login_AccountLogin_Request_20020::Login_AccountLogin_Request_20020(const Login_AccountLogin_Request_20020& from)
  : IRequest(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:login.Login_AccountLogin_Request_20020)
}

void Login_AccountLogin_Request_20020::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpcid_ = 0;
}

Login_AccountLogin_Request_20020::~Login_AccountLogin_Request_20020() {
  // @@protoc_insertion_point(destructor:login.Login_AccountLogin_Request_20020)
  SharedDtor();
}

void Login_AccountLogin_Request_20020::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Login_AccountLogin_Request_20020::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login_AccountLogin_Request_20020::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_AccountLogin_Request_20020_descriptor_;
}

const Login_AccountLogin_Request_20020& Login_AccountLogin_Request_20020::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Login_2eproto();
  return *default_instance_;
}

Login_AccountLogin_Request_20020* Login_AccountLogin_Request_20020::default_instance_ = NULL;

Login_AccountLogin_Request_20020* Login_AccountLogin_Request_20020::New(::google::protobuf::Arena* arena) const {
  Login_AccountLogin_Request_20020* n = new Login_AccountLogin_Request_20020;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login_AccountLogin_Request_20020::Clear() {
// @@protoc_insertion_point(message_clear_start:login.Login_AccountLogin_Request_20020)
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpcid_ = 0;
}

bool Login_AccountLogin_Request_20020::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:login.Login_AccountLogin_Request_20020)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Account = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_AccountLogin_Request_20020.Account"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Password;
        break;
      }

      // optional string Password = 2;
      case 2: {
        if (tag == 18) {
         parse_Password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_AccountLogin_Request_20020.Password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_RpcId;
        break;
      }

      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
         parse_RpcId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:login.Login_AccountLogin_Request_20020)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:login.Login_AccountLogin_Request_20020)
  return false;
#undef DO_
}

void Login_AccountLogin_Request_20020::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:login.Login_AccountLogin_Request_20020)
  // optional string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Request_20020.Account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Request_20020.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // @@protoc_insertion_point(serialize_end:login.Login_AccountLogin_Request_20020)
}

::google::protobuf::uint8* Login_AccountLogin_Request_20020::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:login.Login_AccountLogin_Request_20020)
  // optional string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Request_20020.Account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Request_20020.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:login.Login_AccountLogin_Request_20020)
  return target;
}

int Login_AccountLogin_Request_20020::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:login.Login_AccountLogin_Request_20020)
  int total_size = 0;

  // optional string Account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // optional string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login_AccountLogin_Request_20020::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:login.Login_AccountLogin_Request_20020)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Login_AccountLogin_Request_20020* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Login_AccountLogin_Request_20020>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:login.Login_AccountLogin_Request_20020)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:login.Login_AccountLogin_Request_20020)
    MergeFrom(*source);
  }
}

void Login_AccountLogin_Request_20020::MergeFrom(const Login_AccountLogin_Request_20020& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:login.Login_AccountLogin_Request_20020)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
}

void Login_AccountLogin_Request_20020::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:login.Login_AccountLogin_Request_20020)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login_AccountLogin_Request_20020::CopyFrom(const Login_AccountLogin_Request_20020& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login.Login_AccountLogin_Request_20020)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_AccountLogin_Request_20020::IsInitialized() const {

  return true;
}

void Login_AccountLogin_Request_20020::Swap(Login_AccountLogin_Request_20020* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login_AccountLogin_Request_20020::InternalSwap(Login_AccountLogin_Request_20020* other) {
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  std::swap(rpcid_, other->rpcid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login_AccountLogin_Request_20020::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_AccountLogin_Request_20020_descriptor_;
  metadata.reflection = Login_AccountLogin_Request_20020_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login_AccountLogin_Request_20020

// optional string Account = 1;
void Login_AccountLogin_Request_20020::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_AccountLogin_Request_20020::account() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Request_20020.Account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Request_20020::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Request_20020.Account)
}
 void Login_AccountLogin_Request_20020::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Request_20020.Account)
}
 void Login_AccountLogin_Request_20020::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Request_20020.Account)
}
 ::std::string* Login_AccountLogin_Request_20020::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Request_20020.Account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_AccountLogin_Request_20020::release_account() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Request_20020.Account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Request_20020::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Request_20020.Account)
}

// optional string Password = 2;
void Login_AccountLogin_Request_20020::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_AccountLogin_Request_20020::password() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Request_20020.Password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Request_20020::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Request_20020.Password)
}
 void Login_AccountLogin_Request_20020::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Request_20020.Password)
}
 void Login_AccountLogin_Request_20020::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Request_20020.Password)
}
 ::std::string* Login_AccountLogin_Request_20020::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Request_20020.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_AccountLogin_Request_20020::release_password() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Request_20020.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Request_20020::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Request_20020.Password)
}

// optional int32 RpcId = 90;
void Login_AccountLogin_Request_20020::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 Login_AccountLogin_Request_20020::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Request_20020.RpcId)
  return rpcid_;
}
 void Login_AccountLogin_Request_20020::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Request_20020.RpcId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login_AccountLogin_Response_20021::kAccountIdFieldNumber;
const int Login_AccountLogin_Response_20021::kKeyFieldNumber;
const int Login_AccountLogin_Response_20021::kServerIpFieldNumber;
const int Login_AccountLogin_Response_20021::kServerPortFieldNumber;
const int Login_AccountLogin_Response_20021::kListServerIpFieldNumber;
const int Login_AccountLogin_Response_20021::kListServerPortFieldNumber;
const int Login_AccountLogin_Response_20021::kBanToTimeFieldNumber;
const int Login_AccountLogin_Response_20021::kBanContentFieldNumber;
const int Login_AccountLogin_Response_20021::kRpcIdFieldNumber;
const int Login_AccountLogin_Response_20021::kMessageFieldNumber;
const int Login_AccountLogin_Response_20021::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login_AccountLogin_Response_20021::Login_AccountLogin_Response_20021()
  : IResponse(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:login.Login_AccountLogin_Response_20021)
}

void Login_AccountLogin_Response_20021::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Login_AccountLogin_Response_20021::Login_AccountLogin_Response_20021(const Login_AccountLogin_Response_20021& from)
  : IResponse(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:login.Login_AccountLogin_Response_20021)
}

void Login_AccountLogin_Response_20021::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accountid_ = GOOGLE_LONGLONG(0);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverport_ = 0;
  listserverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listserverport_ = 0;
  bantotime_ = GOOGLE_LONGLONG(0);
  bancontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpcid_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

Login_AccountLogin_Response_20021::~Login_AccountLogin_Response_20021() {
  // @@protoc_insertion_point(destructor:login.Login_AccountLogin_Response_20021)
  SharedDtor();
}

void Login_AccountLogin_Response_20021::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listserverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bancontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Login_AccountLogin_Response_20021::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login_AccountLogin_Response_20021::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_AccountLogin_Response_20021_descriptor_;
}

const Login_AccountLogin_Response_20021& Login_AccountLogin_Response_20021::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Login_2eproto();
  return *default_instance_;
}

Login_AccountLogin_Response_20021* Login_AccountLogin_Response_20021::default_instance_ = NULL;

Login_AccountLogin_Response_20021* Login_AccountLogin_Response_20021::New(::google::protobuf::Arena* arena) const {
  Login_AccountLogin_Response_20021* n = new Login_AccountLogin_Response_20021;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login_AccountLogin_Response_20021::Clear() {
// @@protoc_insertion_point(message_clear_start:login.Login_AccountLogin_Response_20021)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Login_AccountLogin_Response_20021, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Login_AccountLogin_Response_20021*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(serverport_, bantotime_);
  accountid_ = GOOGLE_LONGLONG(0);
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bancontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(rpcid_, error_);
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Login_AccountLogin_Response_20021::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:login.Login_AccountLogin_Response_20021)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 AccountId = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Key;
        break;
      }

      // optional string Key = 3;
      case 3: {
        if (tag == 26) {
         parse_Key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_AccountLogin_Response_20021.Key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ServerIp;
        break;
      }

      // optional string ServerIp = 4;
      case 4: {
        if (tag == 34) {
         parse_ServerIp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverip().data(), this->serverip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_AccountLogin_Response_20021.ServerIp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ServerPort;
        break;
      }

      // optional int32 ServerPort = 5;
      case 5: {
        if (tag == 40) {
         parse_ServerPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ListServerIp;
        break;
      }

      // optional string ListServerIp = 6;
      case 6: {
        if (tag == 50) {
         parse_ListServerIp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listserverip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->listserverip().data(), this->listserverip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_AccountLogin_Response_20021.ListServerIp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_ListServerPort;
        break;
      }

      // optional int32 ListServerPort = 7;
      case 7: {
        if (tag == 56) {
         parse_ListServerPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &listserverport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_BanToTime;
        break;
      }

      // optional int64 BanToTime = 10;
      case 10: {
        if (tag == 80) {
         parse_BanToTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bantotime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_BanContent;
        break;
      }

      // optional string BanContent = 11;
      case 11: {
        if (tag == 90) {
         parse_BanContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bancontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bancontent().data(), this->bancontent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_AccountLogin_Response_20021.BanContent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_RpcId;
        break;
      }

      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
         parse_RpcId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(730)) goto parse_Message;
        break;
      }

      // optional string Message = 91;
      case 91: {
        if (tag == 730) {
         parse_Message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_AccountLogin_Response_20021.Message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(736)) goto parse_Error;
        break;
      }

      // optional int32 Error = 92;
      case 92: {
        if (tag == 736) {
         parse_Error:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:login.Login_AccountLogin_Response_20021)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:login.Login_AccountLogin_Response_20021)
  return false;
#undef DO_
}

void Login_AccountLogin_Response_20021::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:login.Login_AccountLogin_Response_20021)
  // optional int64 AccountId = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->accountid(), output);
  }

  // optional string Key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Response_20021.Key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key(), output);
  }

  // optional string ServerIp = 4;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), this->serverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Response_20021.ServerIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->serverip(), output);
  }

  // optional int32 ServerPort = 5;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->serverport(), output);
  }

  // optional string ListServerIp = 6;
  if (this->listserverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listserverip().data(), this->listserverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Response_20021.ListServerIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->listserverip(), output);
  }

  // optional int32 ListServerPort = 7;
  if (this->listserverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->listserverport(), output);
  }

  // optional int64 BanToTime = 10;
  if (this->bantotime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->bantotime(), output);
  }

  // optional string BanContent = 11;
  if (this->bancontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bancontent().data(), this->bancontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Response_20021.BanContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->bancontent(), output);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // optional string Message = 91;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Response_20021.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      91, this->message(), output);
  }

  // optional int32 Error = 92;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(92, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:login.Login_AccountLogin_Response_20021)
}

::google::protobuf::uint8* Login_AccountLogin_Response_20021::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:login.Login_AccountLogin_Response_20021)
  // optional int64 AccountId = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->accountid(), target);
  }

  // optional string Key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Response_20021.Key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key(), target);
  }

  // optional string ServerIp = 4;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), this->serverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Response_20021.ServerIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->serverip(), target);
  }

  // optional int32 ServerPort = 5;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->serverport(), target);
  }

  // optional string ListServerIp = 6;
  if (this->listserverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listserverip().data(), this->listserverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Response_20021.ListServerIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->listserverip(), target);
  }

  // optional int32 ListServerPort = 7;
  if (this->listserverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->listserverport(), target);
  }

  // optional int64 BanToTime = 10;
  if (this->bantotime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->bantotime(), target);
  }

  // optional string BanContent = 11;
  if (this->bancontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bancontent().data(), this->bancontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Response_20021.BanContent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->bancontent(), target);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // optional string Message = 91;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_AccountLogin_Response_20021.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        91, this->message(), target);
  }

  // optional int32 Error = 92;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(92, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:login.Login_AccountLogin_Response_20021)
  return target;
}

int Login_AccountLogin_Response_20021::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:login.Login_AccountLogin_Response_20021)
  int total_size = 0;

  // optional int64 AccountId = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  // optional string Key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional string ServerIp = 4;
  if (this->serverip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverip());
  }

  // optional int32 ServerPort = 5;
  if (this->serverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());
  }

  // optional string ListServerIp = 6;
  if (this->listserverip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listserverip());
  }

  // optional int32 ListServerPort = 7;
  if (this->listserverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->listserverport());
  }

  // optional int64 BanToTime = 10;
  if (this->bantotime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bantotime());
  }

  // optional string BanContent = 11;
  if (this->bancontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bancontent());
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  // optional string Message = 91;
  if (this->message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional int32 Error = 92;
  if (this->error() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login_AccountLogin_Response_20021::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:login.Login_AccountLogin_Response_20021)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Login_AccountLogin_Response_20021* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Login_AccountLogin_Response_20021>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:login.Login_AccountLogin_Response_20021)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:login.Login_AccountLogin_Response_20021)
    MergeFrom(*source);
  }
}

void Login_AccountLogin_Response_20021::MergeFrom(const Login_AccountLogin_Response_20021& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:login.Login_AccountLogin_Response_20021)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.serverip().size() > 0) {

    serverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverip_);
  }
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
  if (from.listserverip().size() > 0) {

    listserverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listserverip_);
  }
  if (from.listserverport() != 0) {
    set_listserverport(from.listserverport());
  }
  if (from.bantotime() != 0) {
    set_bantotime(from.bantotime());
  }
  if (from.bancontent().size() > 0) {

    bancontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bancontent_);
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void Login_AccountLogin_Response_20021::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:login.Login_AccountLogin_Response_20021)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login_AccountLogin_Response_20021::CopyFrom(const Login_AccountLogin_Response_20021& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login.Login_AccountLogin_Response_20021)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_AccountLogin_Response_20021::IsInitialized() const {

  return true;
}

void Login_AccountLogin_Response_20021::Swap(Login_AccountLogin_Response_20021* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login_AccountLogin_Response_20021::InternalSwap(Login_AccountLogin_Response_20021* other) {
  std::swap(accountid_, other->accountid_);
  key_.Swap(&other->key_);
  serverip_.Swap(&other->serverip_);
  std::swap(serverport_, other->serverport_);
  listserverip_.Swap(&other->listserverip_);
  std::swap(listserverport_, other->listserverport_);
  std::swap(bantotime_, other->bantotime_);
  bancontent_.Swap(&other->bancontent_);
  std::swap(rpcid_, other->rpcid_);
  message_.Swap(&other->message_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login_AccountLogin_Response_20021::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_AccountLogin_Response_20021_descriptor_;
  metadata.reflection = Login_AccountLogin_Response_20021_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login_AccountLogin_Response_20021

// optional int64 AccountId = 2;
void Login_AccountLogin_Response_20021::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Login_AccountLogin_Response_20021::accountid() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.AccountId)
  return accountid_;
}
 void Login_AccountLogin_Response_20021::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.AccountId)
}

// optional string Key = 3;
void Login_AccountLogin_Response_20021::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_AccountLogin_Response_20021::key() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.Key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Response_20021::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.Key)
}
 void Login_AccountLogin_Response_20021::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Response_20021.Key)
}
 void Login_AccountLogin_Response_20021::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Response_20021.Key)
}
 ::std::string* Login_AccountLogin_Response_20021::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Response_20021.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_AccountLogin_Response_20021::release_key() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Response_20021.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Response_20021::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Response_20021.Key)
}

// optional string ServerIp = 4;
void Login_AccountLogin_Response_20021::clear_serverip() {
  serverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_AccountLogin_Response_20021::serverip() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.ServerIp)
  return serverip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Response_20021::set_serverip(const ::std::string& value) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.ServerIp)
}
 void Login_AccountLogin_Response_20021::set_serverip(const char* value) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Response_20021.ServerIp)
}
 void Login_AccountLogin_Response_20021::set_serverip(const char* value, size_t size) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Response_20021.ServerIp)
}
 ::std::string* Login_AccountLogin_Response_20021::mutable_serverip() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Response_20021.ServerIp)
  return serverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_AccountLogin_Response_20021::release_serverip() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Response_20021.ServerIp)
  
  return serverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Response_20021::set_allocated_serverip(::std::string* serverip) {
  if (serverip != NULL) {
    
  } else {
    
  }
  serverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverip);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Response_20021.ServerIp)
}

// optional int32 ServerPort = 5;
void Login_AccountLogin_Response_20021::clear_serverport() {
  serverport_ = 0;
}
 ::google::protobuf::int32 Login_AccountLogin_Response_20021::serverport() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.ServerPort)
  return serverport_;
}
 void Login_AccountLogin_Response_20021::set_serverport(::google::protobuf::int32 value) {
  
  serverport_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.ServerPort)
}

// optional string ListServerIp = 6;
void Login_AccountLogin_Response_20021::clear_listserverip() {
  listserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_AccountLogin_Response_20021::listserverip() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.ListServerIp)
  return listserverip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Response_20021::set_listserverip(const ::std::string& value) {
  
  listserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.ListServerIp)
}
 void Login_AccountLogin_Response_20021::set_listserverip(const char* value) {
  
  listserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Response_20021.ListServerIp)
}
 void Login_AccountLogin_Response_20021::set_listserverip(const char* value, size_t size) {
  
  listserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Response_20021.ListServerIp)
}
 ::std::string* Login_AccountLogin_Response_20021::mutable_listserverip() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Response_20021.ListServerIp)
  return listserverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_AccountLogin_Response_20021::release_listserverip() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Response_20021.ListServerIp)
  
  return listserverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Response_20021::set_allocated_listserverip(::std::string* listserverip) {
  if (listserverip != NULL) {
    
  } else {
    
  }
  listserverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listserverip);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Response_20021.ListServerIp)
}

// optional int32 ListServerPort = 7;
void Login_AccountLogin_Response_20021::clear_listserverport() {
  listserverport_ = 0;
}
 ::google::protobuf::int32 Login_AccountLogin_Response_20021::listserverport() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.ListServerPort)
  return listserverport_;
}
 void Login_AccountLogin_Response_20021::set_listserverport(::google::protobuf::int32 value) {
  
  listserverport_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.ListServerPort)
}

// optional int64 BanToTime = 10;
void Login_AccountLogin_Response_20021::clear_bantotime() {
  bantotime_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Login_AccountLogin_Response_20021::bantotime() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.BanToTime)
  return bantotime_;
}
 void Login_AccountLogin_Response_20021::set_bantotime(::google::protobuf::int64 value) {
  
  bantotime_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.BanToTime)
}

// optional string BanContent = 11;
void Login_AccountLogin_Response_20021::clear_bancontent() {
  bancontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_AccountLogin_Response_20021::bancontent() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.BanContent)
  return bancontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Response_20021::set_bancontent(const ::std::string& value) {
  
  bancontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.BanContent)
}
 void Login_AccountLogin_Response_20021::set_bancontent(const char* value) {
  
  bancontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Response_20021.BanContent)
}
 void Login_AccountLogin_Response_20021::set_bancontent(const char* value, size_t size) {
  
  bancontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Response_20021.BanContent)
}
 ::std::string* Login_AccountLogin_Response_20021::mutable_bancontent() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Response_20021.BanContent)
  return bancontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_AccountLogin_Response_20021::release_bancontent() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Response_20021.BanContent)
  
  return bancontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Response_20021::set_allocated_bancontent(::std::string* bancontent) {
  if (bancontent != NULL) {
    
  } else {
    
  }
  bancontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bancontent);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Response_20021.BanContent)
}

// optional int32 RpcId = 90;
void Login_AccountLogin_Response_20021::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 Login_AccountLogin_Response_20021::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.RpcId)
  return rpcid_;
}
 void Login_AccountLogin_Response_20021::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.RpcId)
}

// optional string Message = 91;
void Login_AccountLogin_Response_20021::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_AccountLogin_Response_20021::message() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Response_20021::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.Message)
}
 void Login_AccountLogin_Response_20021::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_AccountLogin_Response_20021.Message)
}
 void Login_AccountLogin_Response_20021::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_AccountLogin_Response_20021.Message)
}
 ::std::string* Login_AccountLogin_Response_20021::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_AccountLogin_Response_20021.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_AccountLogin_Response_20021::release_message() {
  // @@protoc_insertion_point(field_release:login.Login_AccountLogin_Response_20021.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_AccountLogin_Response_20021::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:login.Login_AccountLogin_Response_20021.Message)
}

// optional int32 Error = 92;
void Login_AccountLogin_Response_20021::clear_error() {
  error_ = 0;
}
 ::google::protobuf::int32 Login_AccountLogin_Response_20021::error() const {
  // @@protoc_insertion_point(field_get:login.Login_AccountLogin_Response_20021.Error)
  return error_;
}
 void Login_AccountLogin_Response_20021::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:login.Login_AccountLogin_Response_20021.Error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login_WechatLogin_Request_20022::kWxCodeFieldNumber;
const int Login_WechatLogin_Request_20022::kRpcIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login_WechatLogin_Request_20022::Login_WechatLogin_Request_20022()
  : IRequest(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:login.Login_WechatLogin_Request_20022)
}

void Login_WechatLogin_Request_20022::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Login_WechatLogin_Request_20022::Login_WechatLogin_Request_20022(const Login_WechatLogin_Request_20022& from)
  : IRequest(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:login.Login_WechatLogin_Request_20022)
}

void Login_WechatLogin_Request_20022::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  wxcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpcid_ = 0;
}

Login_WechatLogin_Request_20022::~Login_WechatLogin_Request_20022() {
  // @@protoc_insertion_point(destructor:login.Login_WechatLogin_Request_20022)
  SharedDtor();
}

void Login_WechatLogin_Request_20022::SharedDtor() {
  wxcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Login_WechatLogin_Request_20022::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login_WechatLogin_Request_20022::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_WechatLogin_Request_20022_descriptor_;
}

const Login_WechatLogin_Request_20022& Login_WechatLogin_Request_20022::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Login_2eproto();
  return *default_instance_;
}

Login_WechatLogin_Request_20022* Login_WechatLogin_Request_20022::default_instance_ = NULL;

Login_WechatLogin_Request_20022* Login_WechatLogin_Request_20022::New(::google::protobuf::Arena* arena) const {
  Login_WechatLogin_Request_20022* n = new Login_WechatLogin_Request_20022;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login_WechatLogin_Request_20022::Clear() {
// @@protoc_insertion_point(message_clear_start:login.Login_WechatLogin_Request_20022)
  wxcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpcid_ = 0;
}

bool Login_WechatLogin_Request_20022::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:login.Login_WechatLogin_Request_20022)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string WxCode = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wxcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wxcode().data(), this->wxcode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_WechatLogin_Request_20022.WxCode"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_RpcId;
        break;
      }

      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
         parse_RpcId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:login.Login_WechatLogin_Request_20022)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:login.Login_WechatLogin_Request_20022)
  return false;
#undef DO_
}

void Login_WechatLogin_Request_20022::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:login.Login_WechatLogin_Request_20022)
  // optional string WxCode = 1;
  if (this->wxcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wxcode().data(), this->wxcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_WechatLogin_Request_20022.WxCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->wxcode(), output);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // @@protoc_insertion_point(serialize_end:login.Login_WechatLogin_Request_20022)
}

::google::protobuf::uint8* Login_WechatLogin_Request_20022::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:login.Login_WechatLogin_Request_20022)
  // optional string WxCode = 1;
  if (this->wxcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wxcode().data(), this->wxcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_WechatLogin_Request_20022.WxCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->wxcode(), target);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:login.Login_WechatLogin_Request_20022)
  return target;
}

int Login_WechatLogin_Request_20022::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:login.Login_WechatLogin_Request_20022)
  int total_size = 0;

  // optional string WxCode = 1;
  if (this->wxcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wxcode());
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login_WechatLogin_Request_20022::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:login.Login_WechatLogin_Request_20022)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Login_WechatLogin_Request_20022* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Login_WechatLogin_Request_20022>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:login.Login_WechatLogin_Request_20022)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:login.Login_WechatLogin_Request_20022)
    MergeFrom(*source);
  }
}

void Login_WechatLogin_Request_20022::MergeFrom(const Login_WechatLogin_Request_20022& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:login.Login_WechatLogin_Request_20022)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.wxcode().size() > 0) {

    wxcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wxcode_);
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
}

void Login_WechatLogin_Request_20022::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:login.Login_WechatLogin_Request_20022)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login_WechatLogin_Request_20022::CopyFrom(const Login_WechatLogin_Request_20022& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login.Login_WechatLogin_Request_20022)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_WechatLogin_Request_20022::IsInitialized() const {

  return true;
}

void Login_WechatLogin_Request_20022::Swap(Login_WechatLogin_Request_20022* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login_WechatLogin_Request_20022::InternalSwap(Login_WechatLogin_Request_20022* other) {
  wxcode_.Swap(&other->wxcode_);
  std::swap(rpcid_, other->rpcid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login_WechatLogin_Request_20022::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_WechatLogin_Request_20022_descriptor_;
  metadata.reflection = Login_WechatLogin_Request_20022_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login_WechatLogin_Request_20022

// optional string WxCode = 1;
void Login_WechatLogin_Request_20022::clear_wxcode() {
  wxcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_WechatLogin_Request_20022::wxcode() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Request_20022.WxCode)
  return wxcode_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_WechatLogin_Request_20022::set_wxcode(const ::std::string& value) {
  
  wxcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Request_20022.WxCode)
}
 void Login_WechatLogin_Request_20022::set_wxcode(const char* value) {
  
  wxcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_WechatLogin_Request_20022.WxCode)
}
 void Login_WechatLogin_Request_20022::set_wxcode(const char* value, size_t size) {
  
  wxcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_WechatLogin_Request_20022.WxCode)
}
 ::std::string* Login_WechatLogin_Request_20022::mutable_wxcode() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_WechatLogin_Request_20022.WxCode)
  return wxcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_WechatLogin_Request_20022::release_wxcode() {
  // @@protoc_insertion_point(field_release:login.Login_WechatLogin_Request_20022.WxCode)
  
  return wxcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_WechatLogin_Request_20022::set_allocated_wxcode(::std::string* wxcode) {
  if (wxcode != NULL) {
    
  } else {
    
  }
  wxcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wxcode);
  // @@protoc_insertion_point(field_set_allocated:login.Login_WechatLogin_Request_20022.WxCode)
}

// optional int32 RpcId = 90;
void Login_WechatLogin_Request_20022::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 Login_WechatLogin_Request_20022::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Request_20022.RpcId)
  return rpcid_;
}
 void Login_WechatLogin_Request_20022::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Request_20022.RpcId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login_WechatLogin_Response_20023::kAccountIdFieldNumber;
const int Login_WechatLogin_Response_20023::kKeyFieldNumber;
const int Login_WechatLogin_Response_20023::kServerIpFieldNumber;
const int Login_WechatLogin_Response_20023::kServerPortFieldNumber;
const int Login_WechatLogin_Response_20023::kListServerIpFieldNumber;
const int Login_WechatLogin_Response_20023::kListServerPortFieldNumber;
const int Login_WechatLogin_Response_20023::kBanToTimeFieldNumber;
const int Login_WechatLogin_Response_20023::kBanContentFieldNumber;
const int Login_WechatLogin_Response_20023::kRpcIdFieldNumber;
const int Login_WechatLogin_Response_20023::kMessageFieldNumber;
const int Login_WechatLogin_Response_20023::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login_WechatLogin_Response_20023::Login_WechatLogin_Response_20023()
  : IResponse(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:login.Login_WechatLogin_Response_20023)
}

void Login_WechatLogin_Response_20023::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Login_WechatLogin_Response_20023::Login_WechatLogin_Response_20023(const Login_WechatLogin_Response_20023& from)
  : IResponse(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:login.Login_WechatLogin_Response_20023)
}

void Login_WechatLogin_Response_20023::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accountid_ = GOOGLE_LONGLONG(0);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverport_ = 0;
  listserverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listserverport_ = 0;
  bantotime_ = GOOGLE_LONGLONG(0);
  bancontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpcid_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

Login_WechatLogin_Response_20023::~Login_WechatLogin_Response_20023() {
  // @@protoc_insertion_point(destructor:login.Login_WechatLogin_Response_20023)
  SharedDtor();
}

void Login_WechatLogin_Response_20023::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listserverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bancontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Login_WechatLogin_Response_20023::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login_WechatLogin_Response_20023::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_WechatLogin_Response_20023_descriptor_;
}

const Login_WechatLogin_Response_20023& Login_WechatLogin_Response_20023::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Login_2eproto();
  return *default_instance_;
}

Login_WechatLogin_Response_20023* Login_WechatLogin_Response_20023::default_instance_ = NULL;

Login_WechatLogin_Response_20023* Login_WechatLogin_Response_20023::New(::google::protobuf::Arena* arena) const {
  Login_WechatLogin_Response_20023* n = new Login_WechatLogin_Response_20023;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login_WechatLogin_Response_20023::Clear() {
// @@protoc_insertion_point(message_clear_start:login.Login_WechatLogin_Response_20023)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Login_WechatLogin_Response_20023, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Login_WechatLogin_Response_20023*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(serverport_, bantotime_);
  accountid_ = GOOGLE_LONGLONG(0);
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bancontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(rpcid_, error_);
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Login_WechatLogin_Response_20023::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:login.Login_WechatLogin_Response_20023)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 AccountId = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Key;
        break;
      }

      // optional string Key = 3;
      case 3: {
        if (tag == 26) {
         parse_Key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_WechatLogin_Response_20023.Key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ServerIp;
        break;
      }

      // optional string ServerIp = 4;
      case 4: {
        if (tag == 34) {
         parse_ServerIp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverip().data(), this->serverip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_WechatLogin_Response_20023.ServerIp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ServerPort;
        break;
      }

      // optional int32 ServerPort = 5;
      case 5: {
        if (tag == 40) {
         parse_ServerPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ListServerIp;
        break;
      }

      // optional string ListServerIp = 6;
      case 6: {
        if (tag == 50) {
         parse_ListServerIp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listserverip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->listserverip().data(), this->listserverip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_WechatLogin_Response_20023.ListServerIp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_ListServerPort;
        break;
      }

      // optional int32 ListServerPort = 7;
      case 7: {
        if (tag == 56) {
         parse_ListServerPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &listserverport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_BanToTime;
        break;
      }

      // optional int64 BanToTime = 10;
      case 10: {
        if (tag == 80) {
         parse_BanToTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bantotime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_BanContent;
        break;
      }

      // optional string BanContent = 11;
      case 11: {
        if (tag == 90) {
         parse_BanContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bancontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bancontent().data(), this->bancontent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_WechatLogin_Response_20023.BanContent"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_RpcId;
        break;
      }

      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
         parse_RpcId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(730)) goto parse_Message;
        break;
      }

      // optional string Message = 91;
      case 91: {
        if (tag == 730) {
         parse_Message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_WechatLogin_Response_20023.Message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(736)) goto parse_Error;
        break;
      }

      // optional int32 Error = 92;
      case 92: {
        if (tag == 736) {
         parse_Error:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:login.Login_WechatLogin_Response_20023)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:login.Login_WechatLogin_Response_20023)
  return false;
#undef DO_
}

void Login_WechatLogin_Response_20023::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:login.Login_WechatLogin_Response_20023)
  // optional int64 AccountId = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->accountid(), output);
  }

  // optional string Key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_WechatLogin_Response_20023.Key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key(), output);
  }

  // optional string ServerIp = 4;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), this->serverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_WechatLogin_Response_20023.ServerIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->serverip(), output);
  }

  // optional int32 ServerPort = 5;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->serverport(), output);
  }

  // optional string ListServerIp = 6;
  if (this->listserverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listserverip().data(), this->listserverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_WechatLogin_Response_20023.ListServerIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->listserverip(), output);
  }

  // optional int32 ListServerPort = 7;
  if (this->listserverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->listserverport(), output);
  }

  // optional int64 BanToTime = 10;
  if (this->bantotime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->bantotime(), output);
  }

  // optional string BanContent = 11;
  if (this->bancontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bancontent().data(), this->bancontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_WechatLogin_Response_20023.BanContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->bancontent(), output);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // optional string Message = 91;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_WechatLogin_Response_20023.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      91, this->message(), output);
  }

  // optional int32 Error = 92;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(92, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:login.Login_WechatLogin_Response_20023)
}

::google::protobuf::uint8* Login_WechatLogin_Response_20023::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:login.Login_WechatLogin_Response_20023)
  // optional int64 AccountId = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->accountid(), target);
  }

  // optional string Key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_WechatLogin_Response_20023.Key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key(), target);
  }

  // optional string ServerIp = 4;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), this->serverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_WechatLogin_Response_20023.ServerIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->serverip(), target);
  }

  // optional int32 ServerPort = 5;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->serverport(), target);
  }

  // optional string ListServerIp = 6;
  if (this->listserverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->listserverip().data(), this->listserverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_WechatLogin_Response_20023.ListServerIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->listserverip(), target);
  }

  // optional int32 ListServerPort = 7;
  if (this->listserverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->listserverport(), target);
  }

  // optional int64 BanToTime = 10;
  if (this->bantotime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->bantotime(), target);
  }

  // optional string BanContent = 11;
  if (this->bancontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bancontent().data(), this->bancontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_WechatLogin_Response_20023.BanContent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->bancontent(), target);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // optional string Message = 91;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_WechatLogin_Response_20023.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        91, this->message(), target);
  }

  // optional int32 Error = 92;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(92, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:login.Login_WechatLogin_Response_20023)
  return target;
}

int Login_WechatLogin_Response_20023::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:login.Login_WechatLogin_Response_20023)
  int total_size = 0;

  // optional int64 AccountId = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  // optional string Key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional string ServerIp = 4;
  if (this->serverip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverip());
  }

  // optional int32 ServerPort = 5;
  if (this->serverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());
  }

  // optional string ListServerIp = 6;
  if (this->listserverip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listserverip());
  }

  // optional int32 ListServerPort = 7;
  if (this->listserverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->listserverport());
  }

  // optional int64 BanToTime = 10;
  if (this->bantotime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bantotime());
  }

  // optional string BanContent = 11;
  if (this->bancontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bancontent());
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  // optional string Message = 91;
  if (this->message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional int32 Error = 92;
  if (this->error() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login_WechatLogin_Response_20023::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:login.Login_WechatLogin_Response_20023)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Login_WechatLogin_Response_20023* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Login_WechatLogin_Response_20023>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:login.Login_WechatLogin_Response_20023)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:login.Login_WechatLogin_Response_20023)
    MergeFrom(*source);
  }
}

void Login_WechatLogin_Response_20023::MergeFrom(const Login_WechatLogin_Response_20023& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:login.Login_WechatLogin_Response_20023)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.serverip().size() > 0) {

    serverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverip_);
  }
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
  if (from.listserverip().size() > 0) {

    listserverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listserverip_);
  }
  if (from.listserverport() != 0) {
    set_listserverport(from.listserverport());
  }
  if (from.bantotime() != 0) {
    set_bantotime(from.bantotime());
  }
  if (from.bancontent().size() > 0) {

    bancontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bancontent_);
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void Login_WechatLogin_Response_20023::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:login.Login_WechatLogin_Response_20023)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login_WechatLogin_Response_20023::CopyFrom(const Login_WechatLogin_Response_20023& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login.Login_WechatLogin_Response_20023)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_WechatLogin_Response_20023::IsInitialized() const {

  return true;
}

void Login_WechatLogin_Response_20023::Swap(Login_WechatLogin_Response_20023* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login_WechatLogin_Response_20023::InternalSwap(Login_WechatLogin_Response_20023* other) {
  std::swap(accountid_, other->accountid_);
  key_.Swap(&other->key_);
  serverip_.Swap(&other->serverip_);
  std::swap(serverport_, other->serverport_);
  listserverip_.Swap(&other->listserverip_);
  std::swap(listserverport_, other->listserverport_);
  std::swap(bantotime_, other->bantotime_);
  bancontent_.Swap(&other->bancontent_);
  std::swap(rpcid_, other->rpcid_);
  message_.Swap(&other->message_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login_WechatLogin_Response_20023::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_WechatLogin_Response_20023_descriptor_;
  metadata.reflection = Login_WechatLogin_Response_20023_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login_WechatLogin_Response_20023

// optional int64 AccountId = 2;
void Login_WechatLogin_Response_20023::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Login_WechatLogin_Response_20023::accountid() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.AccountId)
  return accountid_;
}
 void Login_WechatLogin_Response_20023::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.AccountId)
}

// optional string Key = 3;
void Login_WechatLogin_Response_20023::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_WechatLogin_Response_20023::key() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.Key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_WechatLogin_Response_20023::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.Key)
}
 void Login_WechatLogin_Response_20023::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_WechatLogin_Response_20023.Key)
}
 void Login_WechatLogin_Response_20023::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_WechatLogin_Response_20023.Key)
}
 ::std::string* Login_WechatLogin_Response_20023::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_WechatLogin_Response_20023.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_WechatLogin_Response_20023::release_key() {
  // @@protoc_insertion_point(field_release:login.Login_WechatLogin_Response_20023.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_WechatLogin_Response_20023::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:login.Login_WechatLogin_Response_20023.Key)
}

// optional string ServerIp = 4;
void Login_WechatLogin_Response_20023::clear_serverip() {
  serverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_WechatLogin_Response_20023::serverip() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.ServerIp)
  return serverip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_WechatLogin_Response_20023::set_serverip(const ::std::string& value) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.ServerIp)
}
 void Login_WechatLogin_Response_20023::set_serverip(const char* value) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_WechatLogin_Response_20023.ServerIp)
}
 void Login_WechatLogin_Response_20023::set_serverip(const char* value, size_t size) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_WechatLogin_Response_20023.ServerIp)
}
 ::std::string* Login_WechatLogin_Response_20023::mutable_serverip() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_WechatLogin_Response_20023.ServerIp)
  return serverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_WechatLogin_Response_20023::release_serverip() {
  // @@protoc_insertion_point(field_release:login.Login_WechatLogin_Response_20023.ServerIp)
  
  return serverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_WechatLogin_Response_20023::set_allocated_serverip(::std::string* serverip) {
  if (serverip != NULL) {
    
  } else {
    
  }
  serverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverip);
  // @@protoc_insertion_point(field_set_allocated:login.Login_WechatLogin_Response_20023.ServerIp)
}

// optional int32 ServerPort = 5;
void Login_WechatLogin_Response_20023::clear_serverport() {
  serverport_ = 0;
}
 ::google::protobuf::int32 Login_WechatLogin_Response_20023::serverport() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.ServerPort)
  return serverport_;
}
 void Login_WechatLogin_Response_20023::set_serverport(::google::protobuf::int32 value) {
  
  serverport_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.ServerPort)
}

// optional string ListServerIp = 6;
void Login_WechatLogin_Response_20023::clear_listserverip() {
  listserverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_WechatLogin_Response_20023::listserverip() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.ListServerIp)
  return listserverip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_WechatLogin_Response_20023::set_listserverip(const ::std::string& value) {
  
  listserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.ListServerIp)
}
 void Login_WechatLogin_Response_20023::set_listserverip(const char* value) {
  
  listserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_WechatLogin_Response_20023.ListServerIp)
}
 void Login_WechatLogin_Response_20023::set_listserverip(const char* value, size_t size) {
  
  listserverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_WechatLogin_Response_20023.ListServerIp)
}
 ::std::string* Login_WechatLogin_Response_20023::mutable_listserverip() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_WechatLogin_Response_20023.ListServerIp)
  return listserverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_WechatLogin_Response_20023::release_listserverip() {
  // @@protoc_insertion_point(field_release:login.Login_WechatLogin_Response_20023.ListServerIp)
  
  return listserverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_WechatLogin_Response_20023::set_allocated_listserverip(::std::string* listserverip) {
  if (listserverip != NULL) {
    
  } else {
    
  }
  listserverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listserverip);
  // @@protoc_insertion_point(field_set_allocated:login.Login_WechatLogin_Response_20023.ListServerIp)
}

// optional int32 ListServerPort = 7;
void Login_WechatLogin_Response_20023::clear_listserverport() {
  listserverport_ = 0;
}
 ::google::protobuf::int32 Login_WechatLogin_Response_20023::listserverport() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.ListServerPort)
  return listserverport_;
}
 void Login_WechatLogin_Response_20023::set_listserverport(::google::protobuf::int32 value) {
  
  listserverport_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.ListServerPort)
}

// optional int64 BanToTime = 10;
void Login_WechatLogin_Response_20023::clear_bantotime() {
  bantotime_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Login_WechatLogin_Response_20023::bantotime() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.BanToTime)
  return bantotime_;
}
 void Login_WechatLogin_Response_20023::set_bantotime(::google::protobuf::int64 value) {
  
  bantotime_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.BanToTime)
}

// optional string BanContent = 11;
void Login_WechatLogin_Response_20023::clear_bancontent() {
  bancontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_WechatLogin_Response_20023::bancontent() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.BanContent)
  return bancontent_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_WechatLogin_Response_20023::set_bancontent(const ::std::string& value) {
  
  bancontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.BanContent)
}
 void Login_WechatLogin_Response_20023::set_bancontent(const char* value) {
  
  bancontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_WechatLogin_Response_20023.BanContent)
}
 void Login_WechatLogin_Response_20023::set_bancontent(const char* value, size_t size) {
  
  bancontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_WechatLogin_Response_20023.BanContent)
}
 ::std::string* Login_WechatLogin_Response_20023::mutable_bancontent() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_WechatLogin_Response_20023.BanContent)
  return bancontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_WechatLogin_Response_20023::release_bancontent() {
  // @@protoc_insertion_point(field_release:login.Login_WechatLogin_Response_20023.BanContent)
  
  return bancontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_WechatLogin_Response_20023::set_allocated_bancontent(::std::string* bancontent) {
  if (bancontent != NULL) {
    
  } else {
    
  }
  bancontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bancontent);
  // @@protoc_insertion_point(field_set_allocated:login.Login_WechatLogin_Response_20023.BanContent)
}

// optional int32 RpcId = 90;
void Login_WechatLogin_Response_20023::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 Login_WechatLogin_Response_20023::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.RpcId)
  return rpcid_;
}
 void Login_WechatLogin_Response_20023::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.RpcId)
}

// optional string Message = 91;
void Login_WechatLogin_Response_20023::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_WechatLogin_Response_20023::message() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_WechatLogin_Response_20023::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.Message)
}
 void Login_WechatLogin_Response_20023::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_WechatLogin_Response_20023.Message)
}
 void Login_WechatLogin_Response_20023::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_WechatLogin_Response_20023.Message)
}
 ::std::string* Login_WechatLogin_Response_20023::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_WechatLogin_Response_20023.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_WechatLogin_Response_20023::release_message() {
  // @@protoc_insertion_point(field_release:login.Login_WechatLogin_Response_20023.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_WechatLogin_Response_20023::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:login.Login_WechatLogin_Response_20023.Message)
}

// optional int32 Error = 92;
void Login_WechatLogin_Response_20023::clear_error() {
  error_ = 0;
}
 ::google::protobuf::int32 Login_WechatLogin_Response_20023::error() const {
  // @@protoc_insertion_point(field_get:login.Login_WechatLogin_Response_20023.Error)
  return error_;
}
 void Login_WechatLogin_Response_20023::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:login.Login_WechatLogin_Response_20023.Error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login_keyLogin_Request_20024::kAccountIdFieldNumber;
const int Login_keyLogin_Request_20024::kKeyFieldNumber;
const int Login_keyLogin_Request_20024::kRpcIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login_keyLogin_Request_20024::Login_keyLogin_Request_20024()
  : IRequest(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:login.Login_keyLogin_Request_20024)
}

void Login_keyLogin_Request_20024::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Login_keyLogin_Request_20024::Login_keyLogin_Request_20024(const Login_keyLogin_Request_20024& from)
  : IRequest(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:login.Login_keyLogin_Request_20024)
}

void Login_keyLogin_Request_20024::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accountid_ = GOOGLE_LONGLONG(0);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpcid_ = 0;
}

Login_keyLogin_Request_20024::~Login_keyLogin_Request_20024() {
  // @@protoc_insertion_point(destructor:login.Login_keyLogin_Request_20024)
  SharedDtor();
}

void Login_keyLogin_Request_20024::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Login_keyLogin_Request_20024::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login_keyLogin_Request_20024::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_keyLogin_Request_20024_descriptor_;
}

const Login_keyLogin_Request_20024& Login_keyLogin_Request_20024::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Login_2eproto();
  return *default_instance_;
}

Login_keyLogin_Request_20024* Login_keyLogin_Request_20024::default_instance_ = NULL;

Login_keyLogin_Request_20024* Login_keyLogin_Request_20024::New(::google::protobuf::Arena* arena) const {
  Login_keyLogin_Request_20024* n = new Login_keyLogin_Request_20024;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login_keyLogin_Request_20024::Clear() {
// @@protoc_insertion_point(message_clear_start:login.Login_keyLogin_Request_20024)
  accountid_ = GOOGLE_LONGLONG(0);
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rpcid_ = 0;
}

bool Login_keyLogin_Request_20024::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:login.Login_keyLogin_Request_20024)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 AccountId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Key;
        break;
      }

      // optional string Key = 2;
      case 2: {
        if (tag == 18) {
         parse_Key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_keyLogin_Request_20024.Key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_RpcId;
        break;
      }

      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
         parse_RpcId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:login.Login_keyLogin_Request_20024)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:login.Login_keyLogin_Request_20024)
  return false;
#undef DO_
}

void Login_keyLogin_Request_20024::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:login.Login_keyLogin_Request_20024)
  // optional int64 AccountId = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->accountid(), output);
  }

  // optional string Key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_keyLogin_Request_20024.Key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // @@protoc_insertion_point(serialize_end:login.Login_keyLogin_Request_20024)
}

::google::protobuf::uint8* Login_keyLogin_Request_20024::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:login.Login_keyLogin_Request_20024)
  // optional int64 AccountId = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->accountid(), target);
  }

  // optional string Key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_keyLogin_Request_20024.Key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:login.Login_keyLogin_Request_20024)
  return target;
}

int Login_keyLogin_Request_20024::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:login.Login_keyLogin_Request_20024)
  int total_size = 0;

  // optional int64 AccountId = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  // optional string Key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login_keyLogin_Request_20024::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:login.Login_keyLogin_Request_20024)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Login_keyLogin_Request_20024* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Login_keyLogin_Request_20024>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:login.Login_keyLogin_Request_20024)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:login.Login_keyLogin_Request_20024)
    MergeFrom(*source);
  }
}

void Login_keyLogin_Request_20024::MergeFrom(const Login_keyLogin_Request_20024& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:login.Login_keyLogin_Request_20024)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
}

void Login_keyLogin_Request_20024::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:login.Login_keyLogin_Request_20024)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login_keyLogin_Request_20024::CopyFrom(const Login_keyLogin_Request_20024& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login.Login_keyLogin_Request_20024)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_keyLogin_Request_20024::IsInitialized() const {

  return true;
}

void Login_keyLogin_Request_20024::Swap(Login_keyLogin_Request_20024* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login_keyLogin_Request_20024::InternalSwap(Login_keyLogin_Request_20024* other) {
  std::swap(accountid_, other->accountid_);
  key_.Swap(&other->key_);
  std::swap(rpcid_, other->rpcid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login_keyLogin_Request_20024::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_keyLogin_Request_20024_descriptor_;
  metadata.reflection = Login_keyLogin_Request_20024_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login_keyLogin_Request_20024

// optional int64 AccountId = 1;
void Login_keyLogin_Request_20024::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Login_keyLogin_Request_20024::accountid() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Request_20024.AccountId)
  return accountid_;
}
 void Login_keyLogin_Request_20024::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Request_20024.AccountId)
}

// optional string Key = 2;
void Login_keyLogin_Request_20024::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_keyLogin_Request_20024::key() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Request_20024.Key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_keyLogin_Request_20024::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Request_20024.Key)
}
 void Login_keyLogin_Request_20024::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_keyLogin_Request_20024.Key)
}
 void Login_keyLogin_Request_20024::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_keyLogin_Request_20024.Key)
}
 ::std::string* Login_keyLogin_Request_20024::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_keyLogin_Request_20024.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_keyLogin_Request_20024::release_key() {
  // @@protoc_insertion_point(field_release:login.Login_keyLogin_Request_20024.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_keyLogin_Request_20024::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:login.Login_keyLogin_Request_20024.Key)
}

// optional int32 RpcId = 90;
void Login_keyLogin_Request_20024::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 Login_keyLogin_Request_20024::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Request_20024.RpcId)
  return rpcid_;
}
 void Login_keyLogin_Request_20024::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Request_20024.RpcId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login_keyLogin_Response_20025::kSessionIDFieldNumber;
const int Login_keyLogin_Response_20025::kRpcIdFieldNumber;
const int Login_keyLogin_Response_20025::kMessageFieldNumber;
const int Login_keyLogin_Response_20025::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login_keyLogin_Response_20025::Login_keyLogin_Response_20025()
  : IResponse(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:login.Login_keyLogin_Response_20025)
}

void Login_keyLogin_Response_20025::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Login_keyLogin_Response_20025::Login_keyLogin_Response_20025(const Login_keyLogin_Response_20025& from)
  : IResponse(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:login.Login_keyLogin_Response_20025)
}

void Login_keyLogin_Response_20025::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sessionid_ = 0;
  rpcid_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

Login_keyLogin_Response_20025::~Login_keyLogin_Response_20025() {
  // @@protoc_insertion_point(destructor:login.Login_keyLogin_Response_20025)
  SharedDtor();
}

void Login_keyLogin_Response_20025::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Login_keyLogin_Response_20025::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login_keyLogin_Response_20025::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_keyLogin_Response_20025_descriptor_;
}

const Login_keyLogin_Response_20025& Login_keyLogin_Response_20025::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Login_2eproto();
  return *default_instance_;
}

Login_keyLogin_Response_20025* Login_keyLogin_Response_20025::default_instance_ = NULL;

Login_keyLogin_Response_20025* Login_keyLogin_Response_20025::New(::google::protobuf::Arena* arena) const {
  Login_keyLogin_Response_20025* n = new Login_keyLogin_Response_20025;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login_keyLogin_Response_20025::Clear() {
// @@protoc_insertion_point(message_clear_start:login.Login_keyLogin_Response_20025)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Login_keyLogin_Response_20025, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Login_keyLogin_Response_20025*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sessionid_, rpcid_);
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool Login_keyLogin_Response_20025::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:login.Login_keyLogin_Response_20025)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SessionID = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sessionid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_RpcId;
        break;
      }

      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
         parse_RpcId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(730)) goto parse_Message;
        break;
      }

      // optional string Message = 91;
      case 91: {
        if (tag == 730) {
         parse_Message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "login.Login_keyLogin_Response_20025.Message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(736)) goto parse_Error;
        break;
      }

      // optional int32 Error = 92;
      case 92: {
        if (tag == 736) {
         parse_Error:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:login.Login_keyLogin_Response_20025)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:login.Login_keyLogin_Response_20025)
  return false;
#undef DO_
}

void Login_keyLogin_Response_20025::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:login.Login_keyLogin_Response_20025)
  // optional int32 SessionID = 2;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sessionid(), output);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // optional string Message = 91;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_keyLogin_Response_20025.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      91, this->message(), output);
  }

  // optional int32 Error = 92;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(92, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:login.Login_keyLogin_Response_20025)
}

::google::protobuf::uint8* Login_keyLogin_Response_20025::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:login.Login_keyLogin_Response_20025)
  // optional int32 SessionID = 2;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sessionid(), target);
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // optional string Message = 91;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "login.Login_keyLogin_Response_20025.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        91, this->message(), target);
  }

  // optional int32 Error = 92;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(92, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:login.Login_keyLogin_Response_20025)
  return target;
}

int Login_keyLogin_Response_20025::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:login.Login_keyLogin_Response_20025)
  int total_size = 0;

  // optional int32 SessionID = 2;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sessionid());
  }

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  // optional string Message = 91;
  if (this->message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional int32 Error = 92;
  if (this->error() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login_keyLogin_Response_20025::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:login.Login_keyLogin_Response_20025)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Login_keyLogin_Response_20025* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Login_keyLogin_Response_20025>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:login.Login_keyLogin_Response_20025)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:login.Login_keyLogin_Response_20025)
    MergeFrom(*source);
  }
}

void Login_keyLogin_Response_20025::MergeFrom(const Login_keyLogin_Response_20025& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:login.Login_keyLogin_Response_20025)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void Login_keyLogin_Response_20025::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:login.Login_keyLogin_Response_20025)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login_keyLogin_Response_20025::CopyFrom(const Login_keyLogin_Response_20025& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login.Login_keyLogin_Response_20025)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_keyLogin_Response_20025::IsInitialized() const {

  return true;
}

void Login_keyLogin_Response_20025::Swap(Login_keyLogin_Response_20025* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login_keyLogin_Response_20025::InternalSwap(Login_keyLogin_Response_20025* other) {
  std::swap(sessionid_, other->sessionid_);
  std::swap(rpcid_, other->rpcid_);
  message_.Swap(&other->message_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login_keyLogin_Response_20025::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_keyLogin_Response_20025_descriptor_;
  metadata.reflection = Login_keyLogin_Response_20025_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login_keyLogin_Response_20025

// optional int32 SessionID = 2;
void Login_keyLogin_Response_20025::clear_sessionid() {
  sessionid_ = 0;
}
 ::google::protobuf::int32 Login_keyLogin_Response_20025::sessionid() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Response_20025.SessionID)
  return sessionid_;
}
 void Login_keyLogin_Response_20025::set_sessionid(::google::protobuf::int32 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Response_20025.SessionID)
}

// optional int32 RpcId = 90;
void Login_keyLogin_Response_20025::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 Login_keyLogin_Response_20025::rpcid() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Response_20025.RpcId)
  return rpcid_;
}
 void Login_keyLogin_Response_20025::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Response_20025.RpcId)
}

// optional string Message = 91;
void Login_keyLogin_Response_20025::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_keyLogin_Response_20025::message() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Response_20025.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_keyLogin_Response_20025::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Response_20025.Message)
}
 void Login_keyLogin_Response_20025::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:login.Login_keyLogin_Response_20025.Message)
}
 void Login_keyLogin_Response_20025::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:login.Login_keyLogin_Response_20025.Message)
}
 ::std::string* Login_keyLogin_Response_20025::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:login.Login_keyLogin_Response_20025.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_keyLogin_Response_20025::release_message() {
  // @@protoc_insertion_point(field_release:login.Login_keyLogin_Response_20025.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_keyLogin_Response_20025::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:login.Login_keyLogin_Response_20025.Message)
}

// optional int32 Error = 92;
void Login_keyLogin_Response_20025::clear_error() {
  error_ = 0;
}
 ::google::protobuf::int32 Login_keyLogin_Response_20025::error() const {
  // @@protoc_insertion_point(field_get:login.Login_keyLogin_Response_20025.Error)
  return error_;
}
 void Login_keyLogin_Response_20025::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:login.Login_keyLogin_Response_20025.Error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login_HeartBeat_Request_30::Login_HeartBeat_Request_30()
  : IMessage(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:login.Login_HeartBeat_Request_30)
}

void Login_HeartBeat_Request_30::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Login_HeartBeat_Request_30::Login_HeartBeat_Request_30(const Login_HeartBeat_Request_30& from)
  : IMessage(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:login.Login_HeartBeat_Request_30)
}

void Login_HeartBeat_Request_30::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Login_HeartBeat_Request_30::~Login_HeartBeat_Request_30() {
  // @@protoc_insertion_point(destructor:login.Login_HeartBeat_Request_30)
  SharedDtor();
}

void Login_HeartBeat_Request_30::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Login_HeartBeat_Request_30::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login_HeartBeat_Request_30::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_HeartBeat_Request_30_descriptor_;
}

const Login_HeartBeat_Request_30& Login_HeartBeat_Request_30::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Login_2eproto();
  return *default_instance_;
}

Login_HeartBeat_Request_30* Login_HeartBeat_Request_30::default_instance_ = NULL;

Login_HeartBeat_Request_30* Login_HeartBeat_Request_30::New(::google::protobuf::Arena* arena) const {
  Login_HeartBeat_Request_30* n = new Login_HeartBeat_Request_30;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login_HeartBeat_Request_30::Clear() {
// @@protoc_insertion_point(message_clear_start:login.Login_HeartBeat_Request_30)
}

bool Login_HeartBeat_Request_30::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:login.Login_HeartBeat_Request_30)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:login.Login_HeartBeat_Request_30)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:login.Login_HeartBeat_Request_30)
  return false;
#undef DO_
}

void Login_HeartBeat_Request_30::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:login.Login_HeartBeat_Request_30)
  // @@protoc_insertion_point(serialize_end:login.Login_HeartBeat_Request_30)
}

::google::protobuf::uint8* Login_HeartBeat_Request_30::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:login.Login_HeartBeat_Request_30)
  // @@protoc_insertion_point(serialize_to_array_end:login.Login_HeartBeat_Request_30)
  return target;
}

int Login_HeartBeat_Request_30::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:login.Login_HeartBeat_Request_30)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login_HeartBeat_Request_30::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:login.Login_HeartBeat_Request_30)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Login_HeartBeat_Request_30* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Login_HeartBeat_Request_30>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:login.Login_HeartBeat_Request_30)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:login.Login_HeartBeat_Request_30)
    MergeFrom(*source);
  }
}

void Login_HeartBeat_Request_30::MergeFrom(const Login_HeartBeat_Request_30& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:login.Login_HeartBeat_Request_30)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void Login_HeartBeat_Request_30::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:login.Login_HeartBeat_Request_30)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login_HeartBeat_Request_30::CopyFrom(const Login_HeartBeat_Request_30& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:login.Login_HeartBeat_Request_30)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_HeartBeat_Request_30::IsInitialized() const {

  return true;
}

void Login_HeartBeat_Request_30::Swap(Login_HeartBeat_Request_30* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login_HeartBeat_Request_30::InternalSwap(Login_HeartBeat_Request_30* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login_HeartBeat_Request_30::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_HeartBeat_Request_30_descriptor_;
  metadata.reflection = Login_HeartBeat_Request_30_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login_HeartBeat_Request_30

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace login

// @@protoc_insertion_point(global_scope)
