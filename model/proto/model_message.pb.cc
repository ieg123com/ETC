// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "model_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Model {

namespace {

const ::google::protobuf::Descriptor* MessageHead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageHead_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_model_5fmessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_model_5fmessage_2eproto() {
  protobuf_AddDesc_model_5fmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "model_message.proto");
  GOOGLE_CHECK(file != NULL);
  MessageHead_descriptor_ = file->message_type(0);
  static const int MessageHead_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHead, rpcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHead, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHead, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHead, actorid_),
  };
  MessageHead_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageHead_descriptor_,
      MessageHead::default_instance_,
      MessageHead_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageHead),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHead, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHead, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_model_5fmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageHead_descriptor_, &MessageHead::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_model_5fmessage_2eproto() {
  delete MessageHead::default_instance_;
  delete MessageHead_reflection_;
}

void protobuf_AddDesc_model_5fmessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_model_5fmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023model_message.proto\022\005Model\"M\n\013MessageH"
    "ead\022\r\n\005RpcId\030Z \001(\005\022\r\n\005Error\030[ \001(\005\022\017\n\007Mes"
    "sage\030\\ \001(\t\022\017\n\007ActorId\030] \001(\003b\006proto3", 115);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "model_message.proto", &protobuf_RegisterTypes);
  MessageHead::default_instance_ = new MessageHead();
  MessageHead::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_model_5fmessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_model_5fmessage_2eproto {
  StaticDescriptorInitializer_model_5fmessage_2eproto() {
    protobuf_AddDesc_model_5fmessage_2eproto();
  }
} static_descriptor_initializer_model_5fmessage_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageHead::kRpcIdFieldNumber;
const int MessageHead::kErrorFieldNumber;
const int MessageHead::kMessageFieldNumber;
const int MessageHead::kActorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageHead::MessageHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Model.MessageHead)
}

void MessageHead::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageHead::MessageHead(const MessageHead& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Model.MessageHead)
}

void MessageHead::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rpcid_ = 0;
  error_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actorid_ = GOOGLE_LONGLONG(0);
}

MessageHead::~MessageHead() {
  // @@protoc_insertion_point(destructor:Model.MessageHead)
  SharedDtor();
}

void MessageHead::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MessageHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageHead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageHead_descriptor_;
}

const MessageHead& MessageHead::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fmessage_2eproto();
  return *default_instance_;
}

MessageHead* MessageHead::default_instance_ = NULL;

MessageHead* MessageHead::New(::google::protobuf::Arena* arena) const {
  MessageHead* n = new MessageHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageHead::Clear() {
// @@protoc_insertion_point(message_clear_start:Model.MessageHead)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MessageHead, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MessageHead*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rpcid_, error_);
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actorid_ = GOOGLE_LONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

}

bool MessageHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Model.MessageHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 RpcId = 90;
      case 90: {
        if (tag == 720) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(728)) goto parse_Error;
        break;
      }

      // optional int32 Error = 91;
      case 91: {
        if (tag == 728) {
         parse_Error:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(738)) goto parse_Message;
        break;
      }

      // optional string Message = 92;
      case 92: {
        if (tag == 738) {
         parse_Message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Model.MessageHead.Message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(744)) goto parse_ActorId;
        break;
      }

      // optional int64 ActorId = 93;
      case 93: {
        if (tag == 744) {
         parse_ActorId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Model.MessageHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Model.MessageHead)
  return false;
#undef DO_
}

void MessageHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Model.MessageHead)
  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(90, this->rpcid(), output);
  }

  // optional int32 Error = 91;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(91, this->error(), output);
  }

  // optional string Message = 92;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Model.MessageHead.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      92, this->message(), output);
  }

  // optional int64 ActorId = 93;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(93, this->actorid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Model.MessageHead)
}

::google::protobuf::uint8* MessageHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Model.MessageHead)
  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(90, this->rpcid(), target);
  }

  // optional int32 Error = 91;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(91, this->error(), target);
  }

  // optional string Message = 92;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Model.MessageHead.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        92, this->message(), target);
  }

  // optional int64 ActorId = 93;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(93, this->actorid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Model.MessageHead)
  return target;
}

int MessageHead::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Model.MessageHead)
  int total_size = 0;

  // optional int32 RpcId = 90;
  if (this->rpcid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpcid());
  }

  // optional int32 Error = 91;
  if (this->error() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // optional string Message = 92;
  if (this->message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional int64 ActorId = 93;
  if (this->actorid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->actorid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Model.MessageHead)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageHead* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Model.MessageHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Model.MessageHead)
    MergeFrom(*source);
  }
}

void MessageHead::MergeFrom(const MessageHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Model.MessageHead)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rpcid() != 0) {
    set_rpcid(from.rpcid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
}

void MessageHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Model.MessageHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageHead::CopyFrom(const MessageHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Model.MessageHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageHead::IsInitialized() const {

  return true;
}

void MessageHead::Swap(MessageHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageHead::InternalSwap(MessageHead* other) {
  std::swap(rpcid_, other->rpcid_);
  std::swap(error_, other->error_);
  message_.Swap(&other->message_);
  std::swap(actorid_, other->actorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageHead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageHead_descriptor_;
  metadata.reflection = MessageHead_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageHead

// optional int32 RpcId = 90;
void MessageHead::clear_rpcid() {
  rpcid_ = 0;
}
 ::google::protobuf::int32 MessageHead::rpcid() const {
  // @@protoc_insertion_point(field_get:Model.MessageHead.RpcId)
  return rpcid_;
}
 void MessageHead::set_rpcid(::google::protobuf::int32 value) {
  
  rpcid_ = value;
  // @@protoc_insertion_point(field_set:Model.MessageHead.RpcId)
}

// optional int32 Error = 91;
void MessageHead::clear_error() {
  error_ = 0;
}
 ::google::protobuf::int32 MessageHead::error() const {
  // @@protoc_insertion_point(field_get:Model.MessageHead.Error)
  return error_;
}
 void MessageHead::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:Model.MessageHead.Error)
}

// optional string Message = 92;
void MessageHead::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageHead::message() const {
  // @@protoc_insertion_point(field_get:Model.MessageHead.Message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageHead::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Model.MessageHead.Message)
}
 void MessageHead::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Model.MessageHead.Message)
}
 void MessageHead::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Model.MessageHead.Message)
}
 ::std::string* MessageHead::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:Model.MessageHead.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageHead::release_message() {
  // @@protoc_insertion_point(field_release:Model.MessageHead.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageHead::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Model.MessageHead.Message)
}

// optional int64 ActorId = 93;
void MessageHead::clear_actorid() {
  actorid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageHead::actorid() const {
  // @@protoc_insertion_point(field_get:Model.MessageHead.ActorId)
  return actorid_;
}
 void MessageHead::set_actorid(::google::protobuf::int64 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:Model.MessageHead.ActorId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Model

// @@protoc_insertion_point(global_scope)
